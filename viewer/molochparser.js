/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"NUMBER":15,"HEADER":16,"EMAIL_HEADER":17,"HTTP_HEADER":18,"RANGEFIELD":19,"databytes":20,"bytes":21,"packets":22,"port.src":23,"port.dst":24,"http.uri.cnt":25,"cert.cnt":26,"ip.dns.cnt":27,"ip.email.cnt":28,"ip.xff.cnt":29,"http.md5.cnt":30,"http.user-agent.cnt":31,"user.cnt":32,"host.dns.cnt":33,"host.email.cnt":34,"host.http.cnt":35,"http.hasheader.src.cnt":36,"http.hasheader.dst.cnt":37,"tags.cnt":38,"email.content-type.cnt":39,"email.dst.cnt":40,"email.fn.cnt":41,"email.message-id.cnt":42,"email.md5.cnt":43,"email.mime-version.cnt":44,"email.src.cnt":45,"email.subject.cnt":46,"email.x-mailer.cnt":47,"cert.alt.cnt":48,"ssh.key.cnt":49,"ssh.ver.cnt":50,"LOTERMFIELD":51,"node":52,"host.dns":53,"host.email":54,"host.http":55,"user":56,"email.dst":57,"email.src":58,"cert.subject.cn":59,"cert.issuer.cn":60,"cert.serial":61,"cert.alt":62,"ssh.ver":63,"TERMFIELD":64,"id":65,"ssh.key":66,"email.message-id":67,"email.md5":68,"email.mime-version":69,"email.fn":70,"email.content-type":71,"http.md5":72,"rootId":73,"UPTERMFIELD":74,"country.src":75,"country.dst":76,"country.xff":77,"country.email":78,"country.dns":79,"LOTEXTFIELD":80,"asn.src":81,"asn.dst":82,"asn.dns":83,"asn.xff":84,"asn.email":85,"email.subject":86,"email.x-mailer":87,"cert.subject.on":88,"cert.issuer.on":89,"TEXTFIELD":90,"http.uri":91,"http.user-agent":92,"IPFIELD":93,"ip":94,"ip.src":95,"ip.dst":96,"ip.xff":97,"ip.dns":98,"ip.email":99,"STR":100,"ID":101,"asn":102,"dns":103,"dst":104,"email":105,"src":106,"xff":107,"cert":108,"alt":109,"cnt":110,"issuer":111,"cn":112,"on":113,"serial":114,"subject":115,"country":116,"ua":117,"header":118,"host":119,"http":120,"md5":121,"uri":122,"icmp":123,"port":124,"protocol":125,"QUOTEDSTR":126,"REGEXSTR":127,"ssh":128,"key":129,"ver":130,"tags":131,"tcp":132,"udp":133,"&&":134,"||":135,"!":136,"-":137,"(":138,")":139,"==":140,"!=":141,"file":142,"http.hasheader":143,"http.hasheader.src":144,"http.hasheader.dst":145,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"NUMBER",17:"EMAIL_HEADER",18:"HTTP_HEADER",20:"databytes",21:"bytes",22:"packets",23:"port.src",24:"port.dst",25:"http.uri.cnt",26:"cert.cnt",27:"ip.dns.cnt",28:"ip.email.cnt",29:"ip.xff.cnt",30:"http.md5.cnt",31:"http.user-agent.cnt",32:"user.cnt",33:"host.dns.cnt",34:"host.email.cnt",35:"host.http.cnt",36:"http.hasheader.src.cnt",37:"http.hasheader.dst.cnt",38:"tags.cnt",39:"email.content-type.cnt",40:"email.dst.cnt",41:"email.fn.cnt",42:"email.message-id.cnt",43:"email.md5.cnt",44:"email.mime-version.cnt",45:"email.src.cnt",46:"email.subject.cnt",47:"email.x-mailer.cnt",48:"cert.alt.cnt",49:"ssh.key.cnt",50:"ssh.ver.cnt",52:"node",53:"host.dns",54:"host.email",55:"host.http",56:"user",57:"email.dst",58:"email.src",59:"cert.subject.cn",60:"cert.issuer.cn",61:"cert.serial",62:"cert.alt",63:"ssh.ver",65:"id",66:"ssh.key",67:"email.message-id",68:"email.md5",69:"email.mime-version",70:"email.fn",71:"email.content-type",72:"http.md5",73:"rootId",75:"country.src",76:"country.dst",77:"country.xff",78:"country.email",79:"country.dns",81:"asn.src",82:"asn.dst",83:"asn.dns",84:"asn.xff",85:"asn.email",86:"email.subject",87:"email.x-mailer",88:"cert.subject.on",89:"cert.issuer.on",91:"http.uri",92:"http.user-agent",94:"ip",95:"ip.src",96:"ip.dst",97:"ip.xff",98:"ip.dns",99:"ip.email",101:"ID",102:"asn",103:"dns",104:"dst",105:"email",106:"src",107:"xff",108:"cert",109:"alt",110:"cnt",111:"issuer",112:"cn",113:"on",114:"serial",115:"subject",116:"country",117:"ua",118:"header",119:"host",120:"http",121:"md5",122:"uri",123:"icmp",124:"port",125:"protocol",126:"QUOTEDSTR",127:"REGEXSTR",128:"ssh",129:"key",130:"ver",131:"tags",132:"tcp",133:"udp",134:"&&",135:"||",136:"!",137:"-",138:"(",139:")",140:"==",141:"!=",142:"file",143:"http.hasheader",144:"http.hasheader.src",145:"http.hasheader.dst"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[16,1],[16,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[51,1],[64,1],[64,1],[64,1],[64,1],[64,1],[64,1],[64,1],[64,1],[64,1],[74,1],[74,1],[74,1],[74,1],[74,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[90,1],[90,1],[93,1],[93,1],[93,1],[93,1],[93,1],[93,1],[100,1],[100,1],[100,2],[100,2],[100,2],[100,2],[100,2],[100,1],[100,2],[100,3],[100,2],[100,3],[100,3],[100,2],[100,3],[100,3],[100,1],[100,2],[100,2],[100,2],[100,2],[100,2],[100,2],[100,3],[100,2],[100,3],[100,2],[100,3],[100,2],[100,3],[100,1],[100,2],[100,3],[100,2],[100,3],[100,1],[100,2],[100,2],[100,3],[100,2],[100,3],[100,2],[100,3],[100,1],[100,1],[100,2],[100,3],[100,2],[100,2],[100,3],[100,2],[100,2],[100,3],[100,1],[100,1],[100,1],[100,2],[100,2],[100,1],[100,1],[100,1],[100,2],[100,3],[100,2],[100,3],[100,1],[100,2],[100,1],[100,1],[100,2],[100,1],[100,1],[100,2],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 12:this.$ = 'db'
break;
case 13:this.$ = 'by'
break;
case 14:this.$ = 'pa'
break;
case 15:this.$ = 'p1'
break;
case 16:this.$ = 'p2'
break;
case 17:this.$ = 'uscnt'
break;
case 18:this.$ = 'tlscnt'
break;
case 19:this.$ = 'dnsipcnt'
break;
case 20:this.$ = 'eipcnt'
break;
case 21:this.$ = 'xffscnt'
break;
case 22:this.$ = 'hmd5cnt'
break;
case 23:this.$ = 'uacnt'
break;
case 24:this.$ = 'usercnt'
break;
case 25:this.$ = 'dnshocnt'
break;
case 26:this.$ = 'ehocnt'
break;
case 27:this.$ = 'hocnt'
break;
case 28:this.$ = 'hh1cnt'
break;
case 29:this.$ = 'hh2cnt'
break;
case 30:this.$ = 'tacnt'
break;
case 31:this.$ = 'ectcnt'
break;
case 32:this.$ = 'edstcnt'
break;
case 33:this.$ = 'efncnt'
break;
case 34:this.$ = 'eidcnt'
break;
case 35:this.$ = 'emd5cnt'
break;
case 36:this.$ = 'emvcnt'
break;
case 37:this.$ = 'esrccnt'
break;
case 38:this.$ = 'esubcnt'
break;
case 39:this.$ = 'euacnt'
break;
case 40:this.$ = 'tls.altcnt'
break;
case 41:this.$ = 'sshkeycnt'
break;
case 42:this.$ = 'sshvercnt'
break;
case 43:this.$ = 'no'
break;
case 44:this.$ = 'dnsho'
break;
case 45:this.$ = 'eho'
break;
case 46:this.$ = 'ho'
break;
case 47:this.$ = 'user'
break;
case 48:this.$ = 'edst'
break;
case 49:this.$ = 'esrc'
break;
case 50:this.$ = 'tls.sCn'
break;
case 51:this.$ = 'tls.iCn'
break;
case 52:this.$ = 'tls.sn'
break;
case 53:this.$ = 'tls.alt'
break;
case 54:this.$ = 'sshver'
break;
case 55:this.$ = '_id'
break;
case 56:this.$ = 'sshkey'
break;
case 57:this.$ = 'eid'
break;
case 58:this.$ = 'emd5'
break;
case 59:this.$ = 'emv'
break;
case 60:this.$ = 'efn'
break;
case 61:this.$ = 'ect'
break;
case 62:this.$ = 'hmd5'
break;
case 63:this.$ = 'ro'
break;
case 64:this.$ = 'g1'
break;
case 65:this.$ = 'g2'
break;
case 66:this.$ = 'gxff'
break;
case 67:this.$ = 'geip'
break;
case 68:this.$ = 'gdnsip'
break;
case 69:this.$ = 'as1'
break;
case 70:this.$ = 'as2'
break;
case 71:this.$ = 'asdnsip'
break;
case 72:this.$ = 'asxff'
break;
case 73:this.$ = 'aseip'
break;
case 74:this.$ = 'esub'
break;
case 75:this.$ = 'eua'
break;
case 76:this.$ = 'tls.sOn'
break;
case 77:this.$ = 'tls.iOn'
break;
case 78:this.$ = 'us'
break;
case 79:this.$ = 'ua'
break;
case 80:this.$ = 0
break;
case 81:this.$ = 1
break;
case 82:this.$ = 2
break;
case 83:this.$ = 3
break;
case 84:this.$ = 4
break;
case 85:this.$ = 5
break;
case 159:this.$ = {and: [$$[$0-2], $$[$0]]};
break;
case 160:this.$ = {or: [$$[$0-2], $$[$0]]};
break;
case 161:this.$ = {not: $$[$0]};
break;
case 162:this.$ = -$$[$0];
break;
case 163:this.$ = $$[$0-1];
break;
case 164:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 165:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 166:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 167:this.$ = {term: {pr: 1}};
break;
case 168:this.$ = {term: {pr: 6}};
break;
case 169:this.$ = {term: {pr: 17}};
break;
case 170:this.$ = {term: {pr: $$[$0]}};
break;
case 171:this.$ = {not: {term: {pr: 1}}};
break;
case 172:this.$ = {not: {term: {pr: 6}}};
break;
case 173:this.$ = {not: {term: {pr: 17}}};
break;
case 174:this.$ = {not: {term: {pr: $$[$0]}}};
break;
case 175:this.$ = {or: [{range: {p1: {}}}, {range: {p2: {}}}]};
         this.$.or[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.or[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 176:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 177:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 178:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 179:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 180:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 181:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 182:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 183:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 184:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 185:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 186:this.$ = str2Query(str2Header(yy, $$[$0-2]) + ".snow", "text", $$[$0]);
break;
case 187:this.$ = {not: str2Query(str2Header(yy, $$[$0-2]) + ".snow", "text", $$[$0])};
break;
case 188:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 189: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 190:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 191:this.$ = {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]};
break;
case 192:this.$ = {not: {or: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]}};
break;
case 193:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 194:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 195: var tag = stripQuotes($$[$0]);
          this.$ = {term: {ta: tag}};
        
break;
case 196: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {ta: tag}}};
        
break;
case 197: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 198: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 199: var tag = stripQuotes($$[$0]);
          this.$ = {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]};
        
break;
case 200: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh1: tag}};
        
break;
case 201: var tag = stripQuotes($$[$0]);
          this.$ = {term: {hh2: tag}};
        
break;
case 202: var tag = stripQuotes($$[$0]);
          this.$ = {not: {or: [{term: {hh1: tag}}, {term:{hh2: tag}}]}};
        
break;
case 203: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh1: tag}}};
        
break;
case 204: var tag = stripQuotes($$[$0]);
          this.$ = {not: {term: {hh2: tag}}};
        
break;
case 205: var str = $$[$0].toUpperCase();
          this.$ = {or: [str2Query("g1", "term", str),
                     str2Query("g2", "term", str),
                     str2Query("gxff", "term", str),
                     str2Query("gdnsip", "term", str),
                     str2Query("geip", "term", str)
                    ]
               };
        
break;
case 206: var str = $$[$0].toUpperCase();
          this.$ = {or: [str2Query("g1", "term", str),
                     str2Query("g2", "term", str),
                     str2Query("gxff", "term", str),
                     str2Query("gdnsip", "term", str),
                     str2Query("geip", "term", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 207: var str = $$[$0].toLowerCase();
          
          this.$ = {or: [str2Query("as1", "text", str),
                     str2Query("as2", "text", str),
                     str2Query("asxff", "text", str),
                     str2Query("asdnsip", "text", str),
                     str2Query("aseip", "text", str)
                    ]
               };
        
break;
case 208: var str = $$[$0].toLowerCase();
          this.$ = {or: [str2Query("as1", "text", str),
                     str2Query("as2", "text", str),
                     str2Query("asxff", "text", str),
                     str2Query("asdnsip", "text", str),
                     str2Query("aseip", "text", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 209: var str = $$[$0].toLowerCase();

          this.$ = {or: [str2Query("ho", "term", str),
                     str2Query("dnsho", "term", str),
                     str2Query("eho", "term", str)
                    ]
               };
          this.$ = {not: this.$};
        
break;
case 210: var str = $$[$0].toLowerCase();

          this.$ = {or: [str2Query("ho", "term", str),
                     str2Query("dnsho", "term", str),
                     str2Query("eho", "term", str)
                    ]
               };
        
break;
}
},
table: [{3:1,4:2,16:14,17:[1,92],18:[1,93],19:6,20:[1,24],21:[1,25],22:[1,26],23:[1,27],24:[1,28],25:[1,29],26:[1,30],27:[1,31],28:[1,32],29:[1,33],30:[1,34],31:[1,35],32:[1,36],33:[1,37],34:[1,38],35:[1,39],36:[1,40],37:[1,41],38:[1,42],39:[1,43],40:[1,44],41:[1,45],42:[1,46],43:[1,47],44:[1,48],45:[1,49],46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:9,52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:10,65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:[1,73],72:[1,74],73:[1,75],74:11,75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:12,81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:13,91:[1,90],92:[1,91],93:15,94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],102:[1,22],116:[1,21],119:[1,23],124:[1,8],125:[1,7],131:[1,16],136:[1,3],137:[1,4],138:[1,5],142:[1,17],143:[1,18],144:[1,19],145:[1,20]},{1:[3]},{5:[1,100],134:[1,101],135:[1,102]},{4:103,16:14,17:[1,92],18:[1,93],19:6,20:[1,24],21:[1,25],22:[1,26],23:[1,27],24:[1,28],25:[1,29],26:[1,30],27:[1,31],28:[1,32],29:[1,33],30:[1,34],31:[1,35],32:[1,36],33:[1,37],34:[1,38],35:[1,39],36:[1,40],37:[1,41],38:[1,42],39:[1,43],40:[1,44],41:[1,45],42:[1,46],43:[1,47],44:[1,48],45:[1,49],46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:9,52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:10,65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:[1,73],72:[1,74],73:[1,75],74:11,75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:12,81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:13,91:[1,90],92:[1,91],93:15,94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],102:[1,22],116:[1,21],119:[1,23],124:[1,8],125:[1,7],131:[1,16],136:[1,3],137:[1,4],138:[1,5],142:[1,17],143:[1,18],144:[1,19],145:[1,20]},{4:104,16:14,17:[1,92],18:[1,93],19:6,20:[1,24],21:[1,25],22:[1,26],23:[1,27],24:[1,28],25:[1,29],26:[1,30],27:[1,31],28:[1,32],29:[1,33],30:[1,34],31:[1,35],32:[1,36],33:[1,37],34:[1,38],35:[1,39],36:[1,40],37:[1,41],38:[1,42],39:[1,43],40:[1,44],41:[1,45],42:[1,46],43:[1,47],44:[1,48],45:[1,49],46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:9,52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:10,65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:[1,73],72:[1,74],73:[1,75],74:11,75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:12,81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:13,91:[1,90],92:[1,91],93:15,94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],102:[1,22],116:[1,21],119:[1,23],124:[1,8],125:[1,7],131:[1,16],136:[1,3],137:[1,4],138:[1,5],142:[1,17],143:[1,18],144:[1,19],145:[1,20]},{4:105,16:14,17:[1,92],18:[1,93],19:6,20:[1,24],21:[1,25],22:[1,26],23:[1,27],24:[1,28],25:[1,29],26:[1,30],27:[1,31],28:[1,32],29:[1,33],30:[1,34],31:[1,35],32:[1,36],33:[1,37],34:[1,38],35:[1,39],36:[1,40],37:[1,41],38:[1,42],39:[1,43],40:[1,44],41:[1,45],42:[1,46],43:[1,47],44:[1,48],45:[1,49],46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:9,52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:10,65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:[1,73],72:[1,74],73:[1,75],74:11,75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:12,81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:13,91:[1,90],92:[1,91],93:15,94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],102:[1,22],116:[1,21],119:[1,23],124:[1,8],125:[1,7],131:[1,16],136:[1,3],137:[1,4],138:[1,5],142:[1,17],143:[1,18],144:[1,19],145:[1,20]},{6:109,7:[1,111],8:[1,112],9:110,10:[1,113],11:[1,114],12:106,140:[1,107],141:[1,108]},{140:[1,115],141:[1,116]},{6:109,7:[1,111],8:[1,112],9:110,10:[1,113],11:[1,114],12:117,140:[1,118],141:[1,119]},{140:[1,121],141:[1,120]},{140:[1,123],141:[1,122]},{140:[1,125],141:[1,124]},{140:[1,127],141:[1,126]},{140:[1,129],141:[1,128]},{6:109,7:[1,111],8:[1,112],9:110,10:[1,113],11:[1,114],12:132,140:[1,130],141:[1,131]},{140:[1,133],141:[1,134]},{140:[1,135],141:[1,136]},{140:[1,137],141:[1,138]},{140:[1,139],141:[1,140]},{140:[1,141],141:[1,142]},{140:[1,143],141:[1,144]},{140:[1,145],141:[1,146]},{140:[1,147],141:[1,148]},{140:[1,150],141:[1,149]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],140:[2,12],141:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],140:[2,13],141:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],140:[2,14],141:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],140:[2,15],141:[2,15]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],140:[2,16],141:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],140:[2,17],141:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],140:[2,18],141:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],140:[2,19],141:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],140:[2,20],141:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],140:[2,21],141:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],140:[2,22],141:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],140:[2,23],141:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],140:[2,24],141:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],140:[2,25],141:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],140:[2,26],141:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],140:[2,27],141:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],140:[2,28],141:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],140:[2,29],141:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],140:[2,30],141:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],140:[2,31],141:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],140:[2,32],141:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],140:[2,33],141:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],140:[2,34],141:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],140:[2,35],141:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],140:[2,36],141:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],140:[2,37],141:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],140:[2,38],141:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],140:[2,39],141:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],140:[2,40],141:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],140:[2,41],141:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],140:[2,42],141:[2,42]},{140:[2,43],141:[2,43]},{140:[2,44],141:[2,44]},{140:[2,45],141:[2,45]},{140:[2,46],141:[2,46]},{140:[2,47],141:[2,47]},{140:[2,48],141:[2,48]},{140:[2,49],141:[2,49]},{140:[2,50],141:[2,50]},{140:[2,51],141:[2,51]},{140:[2,52],141:[2,52]},{140:[2,53],141:[2,53]},{140:[2,54],141:[2,54]},{140:[2,55],141:[2,55]},{140:[2,56],141:[2,56]},{140:[2,57],141:[2,57]},{140:[2,58],141:[2,58]},{140:[2,59],141:[2,59]},{140:[2,60],141:[2,60]},{140:[2,61],141:[2,61]},{140:[2,62],141:[2,62]},{140:[2,63],141:[2,63]},{140:[2,64],141:[2,64]},{140:[2,65],141:[2,65]},{140:[2,66],141:[2,66]},{140:[2,67],141:[2,67]},{140:[2,68],141:[2,68]},{140:[2,69],141:[2,69]},{140:[2,70],141:[2,70]},{140:[2,71],141:[2,71]},{140:[2,72],141:[2,72]},{140:[2,73],141:[2,73]},{140:[2,74],141:[2,74]},{140:[2,75],141:[2,75]},{140:[2,76],141:[2,76]},{140:[2,77],141:[2,77]},{140:[2,78],141:[2,78]},{140:[2,79],141:[2,79]},{7:[2,10],8:[2,10],10:[2,10],11:[2,10],140:[2,10],141:[2,10]},{7:[2,11],8:[2,11],10:[2,11],11:[2,11],140:[2,11],141:[2,11]},{140:[2,80],141:[2,80]},{140:[2,81],141:[2,81]},{140:[2,82],141:[2,82]},{140:[2,83],141:[2,83]},{140:[2,84],141:[2,84]},{140:[2,85],141:[2,85]},{1:[2,1]},{4:151,16:14,17:[1,92],18:[1,93],19:6,20:[1,24],21:[1,25],22:[1,26],23:[1,27],24:[1,28],25:[1,29],26:[1,30],27:[1,31],28:[1,32],29:[1,33],30:[1,34],31:[1,35],32:[1,36],33:[1,37],34:[1,38],35:[1,39],36:[1,40],37:[1,41],38:[1,42],39:[1,43],40:[1,44],41:[1,45],42:[1,46],43:[1,47],44:[1,48],45:[1,49],46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:9,52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:10,65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:[1,73],72:[1,74],73:[1,75],74:11,75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:12,81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:13,91:[1,90],92:[1,91],93:15,94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],102:[1,22],116:[1,21],119:[1,23],124:[1,8],125:[1,7],131:[1,16],136:[1,3],137:[1,4],138:[1,5],142:[1,17],143:[1,18],144:[1,19],145:[1,20]},{4:152,16:14,17:[1,92],18:[1,93],19:6,20:[1,24],21:[1,25],22:[1,26],23:[1,27],24:[1,28],25:[1,29],26:[1,30],27:[1,31],28:[1,32],29:[1,33],30:[1,34],31:[1,35],32:[1,36],33:[1,37],34:[1,38],35:[1,39],36:[1,40],37:[1,41],38:[1,42],39:[1,43],40:[1,44],41:[1,45],42:[1,46],43:[1,47],44:[1,48],45:[1,49],46:[1,50],47:[1,51],48:[1,52],49:[1,53],50:[1,54],51:9,52:[1,55],53:[1,56],54:[1,57],55:[1,58],56:[1,59],57:[1,60],58:[1,61],59:[1,62],60:[1,63],61:[1,64],62:[1,65],63:[1,66],64:10,65:[1,67],66:[1,68],67:[1,69],68:[1,70],69:[1,71],70:[1,72],71:[1,73],72:[1,74],73:[1,75],74:11,75:[1,76],76:[1,77],77:[1,78],78:[1,79],79:[1,80],80:12,81:[1,81],82:[1,82],83:[1,83],84:[1,84],85:[1,85],86:[1,86],87:[1,87],88:[1,88],89:[1,89],90:13,91:[1,90],92:[1,91],93:15,94:[1,94],95:[1,95],96:[1,96],97:[1,97],98:[1,98],99:[1,99],102:[1,22],116:[1,21],119:[1,23],124:[1,8],125:[1,7],131:[1,16],136:[1,3],137:[1,4],138:[1,5],142:[1,17],143:[1,18],144:[1,19],145:[1,20]},{5:[2,161],134:[2,161],135:[2,161],139:[2,161]},{5:[2,162],134:[2,162],135:[2,162],139:[2,162]},{134:[1,101],135:[1,102],139:[1,153]},{15:[1,154]},{15:[1,155]},{15:[1,156]},{15:[2,6]},{15:[2,7]},{15:[2,2]},{15:[2,3]},{15:[2,4]},{15:[2,5]},{15:[1,160],123:[1,157],132:[1,158],133:[1,159]},{15:[1,164],123:[1,161],132:[1,162],133:[1,163]},{15:[1,165]},{15:[1,166]},{15:[1,167]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:168,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:192,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:193,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:194,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:195,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:196,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:197,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:198,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:199,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:200,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{15:[1,202],21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:201,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{15:[1,204],21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:203,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{15:[1,205]},{13:206,14:[1,207],15:[1,208]},{13:209,14:[1,207],15:[1,208]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:210,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:211,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:212,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:213,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:214,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:215,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:216,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:217,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:218,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:219,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:220,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:221,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:222,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:223,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:224,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{21:[1,171],22:[1,181],52:[1,180],94:[1,179],100:225,101:[1,169],102:[1,170],105:[1,174],108:[1,172],116:[1,173],117:[1,189],118:[1,175],119:[1,176],120:[1,177],122:[1,191],123:[1,178],124:[1,182],125:[1,183],126:[1,184],127:[1,185],128:[1,186],131:[1,187],132:[1,188],133:[1,190]},{5:[2,159],134:[2,159],135:[2,159],139:[2,159]},{5:[2,160],134:[1,101],135:[2,160],139:[2,160]},{5:[2,163],134:[2,163],135:[2,163],139:[2,163]},{5:[2,164],134:[2,164],135:[2,164],139:[2,164]},{5:[2,165],134:[2,165],135:[2,165],139:[2,165]},{5:[2,166],134:[2,166],135:[2,166],139:[2,166]},{5:[2,167],134:[2,167],135:[2,167],139:[2,167]},{5:[2,168],134:[2,168],135:[2,168],139:[2,168]},{5:[2,169],134:[2,169],135:[2,169],139:[2,169]},{5:[2,170],134:[2,170],135:[2,170],139:[2,170]},{5:[2,171],134:[2,171],135:[2,171],139:[2,171]},{5:[2,172],134:[2,172],135:[2,172],139:[2,172]},{5:[2,173],134:[2,173],135:[2,173],139:[2,173]},{5:[2,174],134:[2,174],135:[2,174],139:[2,174]},{5:[2,175],134:[2,175],135:[2,175],139:[2,175]},{5:[2,191],134:[2,191],135:[2,191],139:[2,191]},{5:[2,192],134:[2,192],135:[2,192],139:[2,192]},{5:[2,176],134:[2,176],135:[2,176],139:[2,176]},{5:[2,86],134:[2,86],135:[2,86],139:[2,86]},{5:[2,87],103:[1,226],104:[1,227],105:[1,228],106:[1,229],107:[1,230],134:[2,87],135:[2,87],139:[2,87]},{5:[2,93],134:[2,93],135:[2,93],139:[2,93]},{109:[1,231],110:[1,232],111:[1,233],114:[1,234],115:[1,235]},{5:[2,102],103:[1,236],104:[1,237],105:[1,238],106:[1,239],107:[1,240],134:[2,102],135:[2,102],139:[2,102]},{104:[1,241],106:[1,242],115:[1,243],117:[1,244]},{5:[2,116],104:[1,245],106:[1,246],134:[2,116],135:[2,116],139:[2,116]},{5:[2,121],110:[1,247],134:[2,121],135:[2,121],139:[2,121]},{117:[1,249],121:[1,248],122:[1,250]},{5:[2,129],134:[2,129],135:[2,129],139:[2,129]},{5:[2,130],103:[1,251],104:[1,252],105:[1,253],106:[1,254],107:[1,255],134:[2,130],135:[2,130],139:[2,130]},{5:[2,139],134:[2,139],135:[2,139],139:[2,139]},{5:[2,140],134:[2,140],135:[2,140],139:[2,140]},{5:[2,141],104:[1,256],106:[1,257],134:[2,141],135:[2,141],139:[2,141]},{5:[2,144],134:[2,144],135:[2,144],139:[2,144]},{5:[2,145],134:[2,145],135:[2,145],139:[2,145]},{5:[2,146],134:[2,146],135:[2,146],139:[2,146]},{129:[1,258],130:[1,259]},{5:[2,151],110:[1,260],134:[2,151],135:[2,151],139:[2,151]},{5:[2,153],134:[2,153],135:[2,153],139:[2,153]},{5:[2,154],110:[1,261],134:[2,154],135:[2,154],139:[2,154]},{5:[2,156],134:[2,156],135:[2,156],139:[2,156]},{5:[2,157],110:[1,262],134:[2,157],135:[2,157],139:[2,157]},{5:[2,177],134:[2,177],135:[2,177],139:[2,177]},{5:[2,178],134:[2,178],135:[2,178],139:[2,178]},{5:[2,179],134:[2,179],135:[2,179],139:[2,179]},{5:[2,180],134:[2,180],135:[2,180],139:[2,180]},{5:[2,181],134:[2,181],135:[2,181],139:[2,181]},{5:[2,182],134:[2,182],135:[2,182],139:[2,182]},{5:[2,183],134:[2,183],135:[2,183],139:[2,183]},{5:[2,184],134:[2,184],135:[2,184],139:[2,184]},{5:[2,185],134:[2,185],135:[2,185],139:[2,185]},{5:[2,186],134:[2,186],135:[2,186],139:[2,186]},{5:[2,188],134:[2,188],135:[2,188],139:[2,188]},{5:[2,187],134:[2,187],135:[2,187],139:[2,187]},{5:[2,189],134:[2,189],135:[2,189],139:[2,189]},{5:[2,190],134:[2,190],135:[2,190],139:[2,190]},{5:[2,193],134:[2,193],135:[2,193],139:[2,193]},{5:[2,8],134:[2,8],135:[2,8],139:[2,8]},{5:[2,9],134:[2,9],135:[2,9],139:[2,9]},{5:[2,194],134:[2,194],135:[2,194],139:[2,194]},{5:[2,195],134:[2,195],135:[2,195],139:[2,195]},{5:[2,196],134:[2,196],135:[2,196],139:[2,196]},{5:[2,197],134:[2,197],135:[2,197],139:[2,197]},{5:[2,198],134:[2,198],135:[2,198],139:[2,198]},{5:[2,199],134:[2,199],135:[2,199],139:[2,199]},{5:[2,202],134:[2,202],135:[2,202],139:[2,202]},{5:[2,200],134:[2,200],135:[2,200],139:[2,200]},{5:[2,203],134:[2,203],135:[2,203],139:[2,203]},{5:[2,201],134:[2,201],135:[2,201],139:[2,201]},{5:[2,204],134:[2,204],135:[2,204],139:[2,204]},{5:[2,205],134:[2,205],135:[2,205],139:[2,205]},{5:[2,206],134:[2,206],135:[2,206],139:[2,206]},{5:[2,207],134:[2,207],135:[2,207],139:[2,207]},{5:[2,208],134:[2,208],135:[2,208],139:[2,208]},{5:[2,209],134:[2,209],135:[2,209],139:[2,209]},{5:[2,210],134:[2,210],135:[2,210],139:[2,210]},{5:[2,88],134:[2,88],135:[2,88],139:[2,88]},{5:[2,89],134:[2,89],135:[2,89],139:[2,89]},{5:[2,90],134:[2,90],135:[2,90],139:[2,90]},{5:[2,91],134:[2,91],135:[2,91],139:[2,91]},{5:[2,92],134:[2,92],135:[2,92],139:[2,92]},{5:[2,94],110:[1,263],134:[2,94],135:[2,94],139:[2,94]},{5:[2,96],134:[2,96],135:[2,96],139:[2,96]},{112:[1,264],113:[1,265]},{5:[2,99],134:[2,99],135:[2,99],139:[2,99]},{112:[1,266],113:[1,267]},{5:[2,103],134:[2,103],135:[2,103],139:[2,103]},{5:[2,104],134:[2,104],135:[2,104],139:[2,104]},{5:[2,105],134:[2,105],135:[2,105],139:[2,105]},{5:[2,106],134:[2,106],135:[2,106],139:[2,106]},{5:[2,107],134:[2,107],135:[2,107],139:[2,107]},{5:[2,108],110:[1,268],134:[2,108],135:[2,108],139:[2,108]},{5:[2,110],110:[1,269],134:[2,110],135:[2,110],139:[2,110]},{5:[2,112],110:[1,270],134:[2,112],135:[2,112],139:[2,112]},{5:[2,114],110:[1,271],134:[2,114],135:[2,114],139:[2,114]},{5:[2,117],110:[1,272],134:[2,117],135:[2,117],139:[2,117]},{5:[2,119],110:[1,273],134:[2,119],135:[2,119],139:[2,119]},{5:[2,122],134:[2,122],135:[2,122],139:[2,122]},{5:[2,123],110:[1,274],134:[2,123],135:[2,123],139:[2,123]},{5:[2,125],110:[1,275],134:[2,125],135:[2,125],139:[2,125]},{5:[2,127],110:[1,276],134:[2,127],135:[2,127],139:[2,127]},{5:[2,131],110:[1,277],134:[2,131],135:[2,131],139:[2,131]},{5:[2,133],134:[2,133],135:[2,133],139:[2,133]},{5:[2,134],110:[1,278],134:[2,134],135:[2,134],139:[2,134]},{5:[2,136],134:[2,136],135:[2,136],139:[2,136]},{5:[2,137],110:[1,279],134:[2,137],135:[2,137],139:[2,137]},{5:[2,142],134:[2,142],135:[2,142],139:[2,142]},{5:[2,143],134:[2,143],135:[2,143],139:[2,143]},{5:[2,147],110:[1,280],134:[2,147],135:[2,147],139:[2,147]},{5:[2,149],110:[1,281],134:[2,149],135:[2,149],139:[2,149]},{5:[2,152],134:[2,152],135:[2,152],139:[2,152]},{5:[2,155],134:[2,155],135:[2,155],139:[2,155]},{5:[2,158],134:[2,158],135:[2,158],139:[2,158]},{5:[2,95],134:[2,95],135:[2,95],139:[2,95]},{5:[2,97],134:[2,97],135:[2,97],139:[2,97]},{5:[2,98],134:[2,98],135:[2,98],139:[2,98]},{5:[2,100],134:[2,100],135:[2,100],139:[2,100]},{5:[2,101],134:[2,101],135:[2,101],139:[2,101]},{5:[2,109],134:[2,109],135:[2,109],139:[2,109]},{5:[2,111],134:[2,111],135:[2,111],139:[2,111]},{5:[2,113],134:[2,113],135:[2,113],139:[2,113]},{5:[2,115],134:[2,115],135:[2,115],139:[2,115]},{5:[2,118],134:[2,118],135:[2,118],139:[2,118]},{5:[2,120],134:[2,120],135:[2,120],139:[2,120]},{5:[2,124],134:[2,124],135:[2,124],139:[2,124]},{5:[2,126],134:[2,126],135:[2,126],139:[2,126]},{5:[2,128],134:[2,128],135:[2,128],139:[2,128]},{5:[2,132],134:[2,132],135:[2,132],139:[2,132]},{5:[2,135],134:[2,135],135:[2,135],139:[2,135]},{5:[2,138],134:[2,138],135:[2,138],139:[2,138]},{5:[2,148],134:[2,148],135:[2,148],139:[2,148]},{5:[2,150],134:[2,150],135:[2,150],139:[2,150]}],
defaultActions: {100:[2,1],109:[2,6],110:[2,7],111:[2,2],112:[2,3],113:[2,4],114:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();
  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1 = {and: []};
  var t2 = {and: []};
  var xff;
  var dns;
  var email;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1.and.push({term: {a1: ip1>>>0}});
        t2.and.push({term: {a2: ip1>>>0}});
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1.and.push({range: {a1: {from: ip1>>>0, to: ip2>>>0}}});
        t2.and.push({range: {a2: {from: ip1>>>0, to: ip2>>>0}}});
        dns =    {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email =  {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff =    {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1.and.push({term: {p1: port}});
    t2.and.push({term: {p2: port}});
  }

  if (t1.and.length === 1) {
      t1 = t1.and[0];
      t2 = t2.and[0];
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);

    return {or: ors};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {query: {regexp: {}}};
        obj.query.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
    }

    if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}
function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 15
break;
case 2:return 14
break;
case 3:if (!yy.emailSearch) throw "email searches disabled for user"; return 39
break;
case 4:if (!yy.emailSearch) throw "email searches disabled for user"; return 71
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 44
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 69
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 42
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 67
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 87
break;
case 11:return "http.hasheader.dst.cnt"
break;
case 12:return "http.hasheader.dst"
break;
case 13:return "http.hasheader"
break;
case 14:return "http.hasheader.src.cnt"
break;
case 15:return "http.hasheader.src"
break;
case 16:return "http.user-agent.cnt"
break;
case 17:return "http.user-agent"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return 102
break;
case 21:return 83
break;
case 22:return 82
break;
case 23:return 81
break;
case 24:return 84
break;
case 25:if (!yy.emailSearch) throw "email searches disabled for user"; return 85
break;
case 26:return 21
break;
case 27:return "cert.alt.cnt"
break;
case 28:return "cert.alt"
break;
case 29:return "cert.cnt"
break;
case 30:return "cert.issuer.cn"
break;
case 31:return "cert.issuer.on"
break;
case 32:return "cert.serial"
break;
case 33:return "cert.subject.cn"
break;
case 34:return "cert.subject.on"
break;
case 35:return 116
break;
case 36:return 79
break;
case 37:return 76
break;
case 38:return 75
break;
case 39:return 77
break;
case 40:if (!yy.emailSearch) throw "email searches disabled for user"; return 78
break;
case 41:return 20
break;
case 42:if (!yy.emailSearch) throw "email searches disabled for user"; return 39
break;
case 43:if (!yy.emailSearch) throw "email searches disabled for user"; return 71
break;
case 44:if (!yy.emailSearch) throw "email searches disabled for user"; return 40
break;
case 45:if (!yy.emailSearch) throw "email searches disabled for user"; return 57
break;
case 46:if (!yy.emailSearch) throw "email searches disabled for user"; return 41
break;
case 47:if (!yy.emailSearch) throw "email searches disabled for user"; return 70
break;
case 48:if (!yy.emailSearch) throw "email searches disabled for user"; return 42
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 67
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 43
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 68
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 44
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 69
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 45
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 58
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 46
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 86
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 87
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 17
break;
case 61:return "file"
break;
case 62:return "http.hasheader.dst.cnt"
break;
case 63:return "http.hasheader.dst"
break;
case 64:return "http.hasheader"
break;
case 65:return "http.hasheader.src.cnt"
break;
case 66:return "http.hasheader.src"
break;
case 67:return "host.dns.cnt"
break;
case 68:return "host.dns"
break;
case 69:return "host.email.cnt"
break;
case 70:return "host.email"
break;
case 71:return "host.http.cnt"
break;
case 72:return "host.http"
break;
case 73:return "host"
break;
case 74:return "http.md5.cnt"
break;
case 75:return "http.md5"
break;
case 76:return "http.uri.cnt"
break;
case 77:return "http.uri"
break;
case 78:return "http.user-agent.cnt"
break;
case 79:return "http.user-agent"
break;
case 80:return "host.http.cnt"
break;
case 81:return "host.http"
break;
case 82:return "HTTP_HEADER"
break;
case 83:return "icmp"
break;
case 84:return "icmp"
break;
case 85:return "id"
break;
case 86:return "ip.dns.cnt"
break;
case 87:return "ip.dns"
break;
case 88:return "ip.dst"
break;
case 89:return "ip"
break;
case 90:return "ip.src"
break;
case 91:return "ip.xff.cnt"
break;
case 92:return "ip.xff"
break;
case 93:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 94:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 95:return 52
break;
case 96:return 22
break;
case 97:return 24
break;
case 98:return 124
break;
case 99:return 23
break;
case 100:return 125
break;
case 101:return "rootId"
break;
case 102:return "ssh.key.cnt"
break;
case 103:return "ssh.key"
break;
case 104:return "ssh.ver.cnt"
break;
case 105:return "ssh.ver"
break;
case 106:return 38
break;
case 107:return 131
break;
case 108:return "tcp"
break;
case 109:return "tcp"
break;
case 110:return "udp"
break;
case 111:return "udp"
break;
case 112:return "http.uri.cnt"
break;
case 113:return "http.uri"
break;
case 114:return "user.cnt"
break;
case 115:return "user"
break;
case 116:return 101
break;
case 117:return 126
break;
case 118:return 127
break;
case 119:return 8
break;
case 120:return 7
break;
case 121:return 11
break;
case 122:return 10
break;
case 123:return 141
break;
case 124:return 140
break;
case 125:return 140
break;
case 126:return 135
break;
case 127:return 135
break;
case 128:return 134
break;
case 129:return 134
break;
case 130:return 138
break;
case 131:return 139
break;
case 132:return 136
break;
case 133:return 5
break;
case 134:return 'INVALID'
break;
case 135:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:[0-9]+\b)/,/^(?:([0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\/[0-9]{1,2})?(:[0-9]{1,5})?\b)/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:node)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rootId)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}