/* parser generated by jison 0.4.2 */
var molochparser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"LTA":6,"lt":7,"lte":8,"GTA":9,"gt":10,"gte":11,"GTLT":12,"IPNUM":13,"IPMATCH":14,"IPMATCHLIST":15,"NUMBER":16,"NUMBERLIST":17,"HEADER":18,"EMAIL_HEADER":19,"HTTP_HEADER":20,"HEADER_CNT":21,"EMAIL_HEADER_CNT":22,"HTTP_HEADER_CNT":23,"RANGEFIELD":24,"databytes":25,"bytes":26,"packets":27,"port.src":28,"port.dst":29,"http.uri.cnt":30,"cert.cnt":31,"ip.dns.cnt":32,"ip.email.cnt":33,"ip.xff.cnt":34,"http.md5.cnt":35,"http.user-agent.cnt":36,"http.version.src.cnt":37,"http.version.dst.cnt":38,"user.cnt":39,"host.dns.cnt":40,"host.email.cnt":41,"host.http.cnt":42,"http.hasheader.src.cnt":43,"http.hasheader.dst.cnt":44,"tags.cnt":45,"email.content-type.cnt":46,"email.dst.cnt":47,"email.fn.cnt":48,"email.message-id.cnt":49,"email.md5.cnt":50,"email.mime-version.cnt":51,"email.src.cnt":52,"email.subject.cnt":53,"email.x-mailer.cnt":54,"cert.alt.cnt":55,"ssh.key.cnt":56,"ssh.ver.cnt":57,"irc.nick.cnt":58,"irc.channel.cnt":59,"LOTERMFIELD":60,"node":61,"host.dns":62,"host.email":63,"host.http":64,"user":65,"email.dst":66,"email.src":67,"cert.subject.cn":68,"cert.issuer.cn":69,"cert.serial":70,"cert.alt":71,"ssh.ver":72,"TERMFIELD":73,"id":74,"ssh.key":75,"email.message-id":76,"email.md5":77,"email.mime-version":78,"email.fn":79,"email.content-type":80,"http.md5":81,"http.version.src":82,"http.version.dst":83,"irc.nick":84,"irc.channel":85,"rootId":86,"UPTERMFIELD":87,"country.src":88,"country.dst":89,"country.xff":90,"country.email":91,"country.dns":92,"LOTEXTFIELD":93,"asn.src":94,"asn.dst":95,"asn.dns":96,"asn.xff":97,"asn.email":98,"email.subject":99,"email.x-mailer":100,"cert.subject.on":101,"cert.issuer.on":102,"TEXTFIELD":103,"http.uri":104,"http.user-agent":105,"IPFIELD":106,"ip":107,"ip.src":108,"ip.dst":109,"ip.xff":110,"ip.dns":111,"ip.email":112,"STR":113,"ID":114,"asn":115,"dns":116,"dst":117,"email":118,"src":119,"xff":120,"cert":121,"alt":122,"cnt":123,"issuer":124,"cn":125,"on":126,"serial":127,"subject":128,"country":129,"ua":130,"header":131,"host":132,"http":133,"md5":134,"uri":135,"icmp":136,"port":137,"protocol":138,"QUOTEDSTR":139,"REGEXSTR":140,"ssh":141,"key":142,"ver":143,"tags":144,"tcp":145,"udp":146,"LOWERLIST":147,"ANYLIST":148,"PROTOCOLNUMBER":149,"PROTOCOLLIST":150,"&&":151,"||":152,"!":153,"-":154,"(":155,")":156,"==":157,"!=":158,"file":159,"http.hasheader":160,"http.hasheader.src":161,"http.hasheader.dst":162,"http.version":163,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"lt",8:"lte",10:"gt",11:"gte",14:"IPMATCH",15:"IPMATCHLIST",16:"NUMBER",17:"NUMBERLIST",19:"EMAIL_HEADER",20:"HTTP_HEADER",22:"EMAIL_HEADER_CNT",23:"HTTP_HEADER_CNT",25:"databytes",26:"bytes",27:"packets",28:"port.src",29:"port.dst",30:"http.uri.cnt",31:"cert.cnt",32:"ip.dns.cnt",33:"ip.email.cnt",34:"ip.xff.cnt",35:"http.md5.cnt",36:"http.user-agent.cnt",37:"http.version.src.cnt",38:"http.version.dst.cnt",39:"user.cnt",40:"host.dns.cnt",41:"host.email.cnt",42:"host.http.cnt",43:"http.hasheader.src.cnt",44:"http.hasheader.dst.cnt",45:"tags.cnt",46:"email.content-type.cnt",47:"email.dst.cnt",48:"email.fn.cnt",49:"email.message-id.cnt",50:"email.md5.cnt",51:"email.mime-version.cnt",52:"email.src.cnt",53:"email.subject.cnt",54:"email.x-mailer.cnt",55:"cert.alt.cnt",56:"ssh.key.cnt",57:"ssh.ver.cnt",58:"irc.nick.cnt",59:"irc.channel.cnt",61:"node",62:"host.dns",63:"host.email",64:"host.http",65:"user",66:"email.dst",67:"email.src",68:"cert.subject.cn",69:"cert.issuer.cn",70:"cert.serial",71:"cert.alt",72:"ssh.ver",74:"id",75:"ssh.key",76:"email.message-id",77:"email.md5",78:"email.mime-version",79:"email.fn",80:"email.content-type",81:"http.md5",82:"http.version.src",83:"http.version.dst",84:"irc.nick",85:"irc.channel",86:"rootId",88:"country.src",89:"country.dst",90:"country.xff",91:"country.email",92:"country.dns",94:"asn.src",95:"asn.dst",96:"asn.dns",97:"asn.xff",98:"asn.email",99:"email.subject",100:"email.x-mailer",101:"cert.subject.on",102:"cert.issuer.on",104:"http.uri",105:"http.user-agent",107:"ip",108:"ip.src",109:"ip.dst",110:"ip.xff",111:"ip.dns",112:"ip.email",114:"ID",115:"asn",116:"dns",117:"dst",118:"email",119:"src",120:"xff",121:"cert",122:"alt",123:"cnt",124:"issuer",125:"cn",126:"on",127:"serial",128:"subject",129:"country",130:"ua",131:"header",132:"host",133:"http",134:"md5",135:"uri",136:"icmp",137:"port",138:"protocol",139:"QUOTEDSTR",140:"REGEXSTR",141:"ssh",142:"key",143:"ver",144:"tags",145:"tcp",146:"udp",147:"LOWERLIST",148:"ANYLIST",151:"&&",152:"||",153:"!",154:"-",155:"(",156:")",157:"==",158:"!=",159:"file",160:"http.hasheader",161:"http.hasheader.src",162:"http.hasheader.dst",163:"http.version"},
productions_: [0,[3,2],[6,1],[6,1],[9,1],[9,1],[12,1],[12,1],[13,1],[13,1],[13,1],[13,1],[18,1],[18,1],[21,1],[21,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[87,1],[87,1],[87,1],[87,1],[87,1],[93,1],[93,1],[93,1],[93,1],[93,1],[93,1],[93,1],[93,1],[93,1],[103,1],[103,1],[106,1],[106,1],[106,1],[106,1],[106,1],[106,1],[113,1],[113,1],[113,2],[113,2],[113,2],[113,2],[113,2],[113,1],[113,2],[113,3],[113,2],[113,3],[113,3],[113,2],[113,3],[113,3],[113,1],[113,2],[113,2],[113,2],[113,2],[113,2],[113,2],[113,3],[113,2],[113,3],[113,2],[113,3],[113,2],[113,3],[113,1],[113,2],[113,3],[113,2],[113,3],[113,1],[113,2],[113,2],[113,3],[113,2],[113,3],[113,2],[113,3],[113,1],[113,1],[113,2],[113,3],[113,2],[113,2],[113,3],[113,2],[113,2],[113,3],[113,1],[113,1],[113,1],[113,2],[113,2],[113,1],[113,1],[113,1],[113,2],[113,3],[113,2],[113,3],[113,1],[113,2],[113,1],[113,1],[113,2],[113,1],[113,1],[113,2],[113,1],[113,1],[113,1],[113,1],[113,1],[149,1],[149,1],[149,1],[149,1],[150,1],[150,1],[4,3],[4,3],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = 'lt'
break;
case 3:this.$ = 'lte'
break;
case 4:this.$ = 'gt'
break;
case 5:this.$ = 'gte'
break;
case 16:this.$ = 'db'
break;
case 17:this.$ = 'by'
break;
case 18:this.$ = 'pa'
break;
case 19:this.$ = 'p1'
break;
case 20:this.$ = 'p2'
break;
case 21:this.$ = 'uscnt'
break;
case 22:this.$ = 'tlscnt'
break;
case 23:this.$ = 'dnsipcnt'
break;
case 24:this.$ = 'eipcnt'
break;
case 25:this.$ = 'xffscnt'
break;
case 26:this.$ = 'hmd5cnt'
break;
case 27:this.$ = 'uacnt'
break;
case 28:this.$ = 'hsvercnt'
break;
case 29:this.$ = 'hdvercnt'
break;
case 30:this.$ = 'usercnt'
break;
case 31:this.$ = 'dnshocnt'
break;
case 32:this.$ = 'ehocnt'
break;
case 33:this.$ = 'hocnt'
break;
case 34:this.$ = 'hh1cnt'
break;
case 35:this.$ = 'hh2cnt'
break;
case 36:this.$ = 'tacnt'
break;
case 37:this.$ = 'ectcnt'
break;
case 38:this.$ = 'edstcnt'
break;
case 39:this.$ = 'efncnt'
break;
case 40:this.$ = 'eidcnt'
break;
case 41:this.$ = 'emd5cnt'
break;
case 42:this.$ = 'emvcnt'
break;
case 43:this.$ = 'esrccnt'
break;
case 44:this.$ = 'esubcnt'
break;
case 45:this.$ = 'euacnt'
break;
case 46:this.$ = 'tls.altcnt'
break;
case 47:this.$ = 'sshkeycnt'
break;
case 48:this.$ = 'sshvercnt'
break;
case 49:this.$ = 'ircnckcnt'
break;
case 50:this.$ = 'ircchcnt'
break;
case 51:this.$ = 'no'
break;
case 52:this.$ = 'dnsho'
break;
case 53:this.$ = 'eho'
break;
case 54:this.$ = 'ho'
break;
case 55:this.$ = 'user'
break;
case 56:this.$ = 'edst'
break;
case 57:this.$ = 'esrc'
break;
case 58:this.$ = 'tls.sCn'
break;
case 59:this.$ = 'tls.iCn'
break;
case 60:this.$ = 'tls.sn'
break;
case 61:this.$ = 'tls.alt'
break;
case 62:this.$ = 'sshver'
break;
case 63:this.$ = '_id'
break;
case 64:this.$ = 'sshkey'
break;
case 65:this.$ = 'eid'
break;
case 66:this.$ = 'emd5'
break;
case 67:this.$ = 'emv'
break;
case 68:this.$ = 'efn'
break;
case 69:this.$ = 'ect'
break;
case 70:this.$ = 'hmd5'
break;
case 71:this.$ = 'hsver'
break;
case 72:this.$ = 'hdver'
break;
case 73:this.$ = 'ircnck'
break;
case 74:this.$ = 'ircch'
break;
case 75:this.$ = 'ro'
break;
case 76:this.$ = 'g1'
break;
case 77:this.$ = 'g2'
break;
case 78:this.$ = 'gxff'
break;
case 79:this.$ = 'geip'
break;
case 80:this.$ = 'gdnsip'
break;
case 81:this.$ = 'as1'
break;
case 82:this.$ = 'as2'
break;
case 83:this.$ = 'asdnsip'
break;
case 84:this.$ = 'asxff'
break;
case 85:this.$ = 'aseip'
break;
case 86:this.$ = 'esub'
break;
case 87:this.$ = 'eua'
break;
case 88:this.$ = 'tls.sOn'
break;
case 89:this.$ = 'tls.iOn'
break;
case 90:this.$ = 'us'
break;
case 91:this.$ = 'ua'
break;
case 92:this.$ = 0
break;
case 93:this.$ = 1
break;
case 94:this.$ = 2
break;
case 95:this.$ = 3
break;
case 96:this.$ = 4
break;
case 97:this.$ = 5
break;
case 182:this.$ = {bool: {must: [$$[$0-2], $$[$0]]}};
break;
case 183:this.$ = {bool: {should: [$$[$0-2], $$[$0]]}};
break;
case 184:this.$ = {not: $$[$0]};
break;
case 185:this.$ = -$$[$0];
break;
case 186:this.$ = $$[$0-1];
break;
case 187:this.$ = {range: {}};
         this.$.range[$$[$0-2]] = {};
         this.$.range[$$[$0-2]][$$[$0-1]] = $$[$0];
break;
case 188:this.$ = {term: {}};
         this.$.term[$$[$0-2]] = $$[$0];
break;
case 189:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = $$[$0];
break;
case 190:this.$ = {terms: {}};
         this.$.terms[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 191:this.$ = {not: {term: {}}};
         this.$.not.term[$$[$0-2]] = CSVtoArray($$[$0]);
break;
case 192:this.$ = {term: {pr: protocolLookup($$[$0])}};
break;
case 193:this.$ = {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}};
break;
case 194:this.$ = {not: {term: {pr: protocolLookup($$[$0])}}};
break;
case 195:this.$ = {not: {terms: {pr: protocolLookup(CSVtoArray($$[$0]))}}};
break;
case 196:this.$ = {bool: {should: [{range: {p1: {}}}, {range: {p2: {}}}]}};
         this.$.bool.should[0].range.p1[$$[$0-1]] = $$[$0];
         this.$.bool.should[1].range.p2[$$[$0-1]] = $$[$0];
break;
case 197:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toLowerCase())};
break;
case 198:this.$ = str2Query($$[$0-2], "term", $$[$0].toLowerCase());
break;
case 199:this.$ = {not: str2Query($$[$0-2], "term", $$[$0])};
break;
case 200:this.$ = str2Query($$[$0-2], "term", $$[$0]);
break;
case 201:this.$ = {not: str2Query($$[$0-2], "term", $$[$0].toUpperCase())};
break;
case 202:this.$ = str2Query($$[$0-2], "term", $$[$0].toUpperCase());
break;
case 203:this.$ = {not: str2Query($$[$0-2], "text", $$[$0].toLowerCase())};
break;
case 204:this.$ = str2Query($$[$0-2], "text", $$[$0].toLowerCase());
break;
case 205:this.$ = {not: str2Query($$[$0-2], "text", $$[$0])};
break;
case 206:this.$ = str2Query($$[$0-2], "text", $$[$0]);
break;
case 207:this.$ = str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0]);
break;
case 208:this.$ = {not: str2Query(str2Header(yy, $$[$0-2]), "text", $$[$0])};
break;
case 209:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 210: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 211:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 212:
        this.$ = {term: {}};
        this.$.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 213: this.$ = {not: {term: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 214:
        this.$ = {terms: {}};
        this.$.terms[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 215: this.$ = {not: {terms: {}}};
          this.$.not.term[str2Header(yy, $$[$0-2])] = $$[$0];
        
break;
case 216:this.$ = {range: {}};
         this.$.range[str2Header(yy, $$[$0-2])] = {};
         this.$.range[str2Header(yy, $$[$0-2])][$$[$0-1]] = $$[$0];
break;
case 217:this.$ = {bool: {should: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]}};
break;
case 218:this.$ = {bool: {should: [{terms: {p1: CSVtoArray($$[$0])}}, {terms: {p2: CSVtoArray($$[$0])}}]}};
break;
case 219:this.$ = {bool: {must_not: [{term: {p1: $$[$0]}}, {term: {p2: $$[$0]}}]}};
break;
case 220:this.$ = {bool: {must_not: [{term: {p1: CSVtoArray($$[$0])}}, {term: {p2: CSVtoArray($$[$0])}}]}};
break;
case 221:this.$ = parseIpPort(yy, $$[$0],$$[$0-2]);
break;
case 222:this.$ = {not: parseIpPort(yy, $$[$0],$$[$0-2])};
break;
case 223: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("ta", tag);
        
break;
case 224: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("ta", tag)};
        
break;
case 225: var file = stripQuotes($$[$0]);
          this.$ = {fileand: file};
        
break;
case 226: var file = stripQuotes($$[$0]);
          this.$ = {not: {fileand: file}};
        
break;
case 227: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {should: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 228: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh1", tag);
        
break;
case 229: var tag = stripQuotes($$[$0]);
          this.$ = termOrTerms("hh2", tag);
        
break;
case 230: var tag = stripQuotes($$[$0]);
          this.$ = {bool: {must_not: [termOrTerms("hh1", tag), termOrTerms("hh2", tag)]}};
        
break;
case 231: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh1", tag)};
        
break;
case 232: var tag = stripQuotes($$[$0]);
          this.$ = {not: termOrTerms("hh2", tag)};
        
break;
case 233:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 234:
          this.$ = [str2Query("hsver", "term", $$[$0]),
                str2Query("hdver", "term", $$[$0])
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 235: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gxff", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 236: var str = $$[$0].toUpperCase();
          this.$ = [str2Query("g1", "term", str),
                str2Query("g2", "term", str),
                str2Query("gxff", "term", str),
                str2Query("gdnsip", "term", str),
                str2Query("geip", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 237: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("asxff", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("aseip", "text", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
case 238: var str = $$[$0].toLowerCase();
          this.$ = [str2Query("as1", "text", str),
                str2Query("as2", "text", str),
                str2Query("asxff", "text", str),
                str2Query("asdnsip", "text", str),
                str2Query("aseip", "text", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 239: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str)
               ];
          this.$ = {bool: {must_not: this.$}};
        
break;
case 240: var str = $$[$0].toLowerCase();

          this.$ = [str2Query("ho", "term", str),
                str2Query("dnsho", "term", str),
                str2Query("eho", "term", str)
               ];
          this.$ = {bool: {should: this.$}};
        
break;
}
},
table: [{3:1,4:2,18:14,19:[1,102],20:[1,103],21:15,22:[1,104],23:[1,105],24:6,25:[1,26],26:[1,27],27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:9,61:[1,61],62:[1,62],63:[1,63],64:[1,64],65:[1,65],66:[1,66],67:[1,67],68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:10,74:[1,73],75:[1,74],76:[1,75],77:[1,76],78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:[1,82],84:[1,83],85:[1,84],86:[1,85],87:11,88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:12,94:[1,91],95:[1,92],96:[1,93],97:[1,94],98:[1,95],99:[1,96],100:[1,97],101:[1,98],102:[1,99],103:13,104:[1,100],105:[1,101],106:16,107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],115:[1,24],129:[1,23],132:[1,25],137:[1,8],138:[1,7],144:[1,17],153:[1,3],154:[1,4],155:[1,5],159:[1,18],160:[1,19],161:[1,20],162:[1,21],163:[1,22]},{1:[3]},{5:[1,112],151:[1,113],152:[1,114]},{4:115,18:14,19:[1,102],20:[1,103],21:15,22:[1,104],23:[1,105],24:6,25:[1,26],26:[1,27],27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:9,61:[1,61],62:[1,62],63:[1,63],64:[1,64],65:[1,65],66:[1,66],67:[1,67],68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:10,74:[1,73],75:[1,74],76:[1,75],77:[1,76],78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:[1,82],84:[1,83],85:[1,84],86:[1,85],87:11,88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:12,94:[1,91],95:[1,92],96:[1,93],97:[1,94],98:[1,95],99:[1,96],100:[1,97],101:[1,98],102:[1,99],103:13,104:[1,100],105:[1,101],106:16,107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],115:[1,24],129:[1,23],132:[1,25],137:[1,8],138:[1,7],144:[1,17],153:[1,3],154:[1,4],155:[1,5],159:[1,18],160:[1,19],161:[1,20],162:[1,21],163:[1,22]},{4:116,18:14,19:[1,102],20:[1,103],21:15,22:[1,104],23:[1,105],24:6,25:[1,26],26:[1,27],27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:9,61:[1,61],62:[1,62],63:[1,63],64:[1,64],65:[1,65],66:[1,66],67:[1,67],68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:10,74:[1,73],75:[1,74],76:[1,75],77:[1,76],78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:[1,82],84:[1,83],85:[1,84],86:[1,85],87:11,88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:12,94:[1,91],95:[1,92],96:[1,93],97:[1,94],98:[1,95],99:[1,96],100:[1,97],101:[1,98],102:[1,99],103:13,104:[1,100],105:[1,101],106:16,107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],115:[1,24],129:[1,23],132:[1,25],137:[1,8],138:[1,7],144:[1,17],153:[1,3],154:[1,4],155:[1,5],159:[1,18],160:[1,19],161:[1,20],162:[1,21],163:[1,22]},{4:117,18:14,19:[1,102],20:[1,103],21:15,22:[1,104],23:[1,105],24:6,25:[1,26],26:[1,27],27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:9,61:[1,61],62:[1,62],63:[1,63],64:[1,64],65:[1,65],66:[1,66],67:[1,67],68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:10,74:[1,73],75:[1,74],76:[1,75],77:[1,76],78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:[1,82],84:[1,83],85:[1,84],86:[1,85],87:11,88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:12,94:[1,91],95:[1,92],96:[1,93],97:[1,94],98:[1,95],99:[1,96],100:[1,97],101:[1,98],102:[1,99],103:13,104:[1,100],105:[1,101],106:16,107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],115:[1,24],129:[1,23],132:[1,25],137:[1,8],138:[1,7],144:[1,17],153:[1,3],154:[1,4],155:[1,5],159:[1,18],160:[1,19],161:[1,20],162:[1,21],163:[1,22]},{6:121,7:[1,123],8:[1,124],9:122,10:[1,125],11:[1,126],12:118,157:[1,119],158:[1,120]},{157:[1,127],158:[1,128]},{6:121,7:[1,123],8:[1,124],9:122,10:[1,125],11:[1,126],12:129,157:[1,130],158:[1,131]},{157:[1,133],158:[1,132]},{157:[1,135],158:[1,134]},{157:[1,137],158:[1,136]},{157:[1,139],158:[1,138]},{157:[1,141],158:[1,140]},{6:121,7:[1,123],8:[1,124],9:122,10:[1,125],11:[1,126],12:144,157:[1,142],158:[1,143]},{6:121,7:[1,123],8:[1,124],9:122,10:[1,125],11:[1,126],12:147,157:[1,145],158:[1,146]},{157:[1,148],158:[1,149]},{157:[1,150],158:[1,151]},{157:[1,152],158:[1,153]},{157:[1,154],158:[1,155]},{157:[1,156],158:[1,157]},{157:[1,158],158:[1,159]},{157:[1,160],158:[1,161]},{157:[1,162],158:[1,163]},{157:[1,164],158:[1,165]},{157:[1,167],158:[1,166]},{7:[2,16],8:[2,16],10:[2,16],11:[2,16],157:[2,16],158:[2,16]},{7:[2,17],8:[2,17],10:[2,17],11:[2,17],157:[2,17],158:[2,17]},{7:[2,18],8:[2,18],10:[2,18],11:[2,18],157:[2,18],158:[2,18]},{7:[2,19],8:[2,19],10:[2,19],11:[2,19],157:[2,19],158:[2,19]},{7:[2,20],8:[2,20],10:[2,20],11:[2,20],157:[2,20],158:[2,20]},{7:[2,21],8:[2,21],10:[2,21],11:[2,21],157:[2,21],158:[2,21]},{7:[2,22],8:[2,22],10:[2,22],11:[2,22],157:[2,22],158:[2,22]},{7:[2,23],8:[2,23],10:[2,23],11:[2,23],157:[2,23],158:[2,23]},{7:[2,24],8:[2,24],10:[2,24],11:[2,24],157:[2,24],158:[2,24]},{7:[2,25],8:[2,25],10:[2,25],11:[2,25],157:[2,25],158:[2,25]},{7:[2,26],8:[2,26],10:[2,26],11:[2,26],157:[2,26],158:[2,26]},{7:[2,27],8:[2,27],10:[2,27],11:[2,27],157:[2,27],158:[2,27]},{7:[2,28],8:[2,28],10:[2,28],11:[2,28],157:[2,28],158:[2,28]},{7:[2,29],8:[2,29],10:[2,29],11:[2,29],157:[2,29],158:[2,29]},{7:[2,30],8:[2,30],10:[2,30],11:[2,30],157:[2,30],158:[2,30]},{7:[2,31],8:[2,31],10:[2,31],11:[2,31],157:[2,31],158:[2,31]},{7:[2,32],8:[2,32],10:[2,32],11:[2,32],157:[2,32],158:[2,32]},{7:[2,33],8:[2,33],10:[2,33],11:[2,33],157:[2,33],158:[2,33]},{7:[2,34],8:[2,34],10:[2,34],11:[2,34],157:[2,34],158:[2,34]},{7:[2,35],8:[2,35],10:[2,35],11:[2,35],157:[2,35],158:[2,35]},{7:[2,36],8:[2,36],10:[2,36],11:[2,36],157:[2,36],158:[2,36]},{7:[2,37],8:[2,37],10:[2,37],11:[2,37],157:[2,37],158:[2,37]},{7:[2,38],8:[2,38],10:[2,38],11:[2,38],157:[2,38],158:[2,38]},{7:[2,39],8:[2,39],10:[2,39],11:[2,39],157:[2,39],158:[2,39]},{7:[2,40],8:[2,40],10:[2,40],11:[2,40],157:[2,40],158:[2,40]},{7:[2,41],8:[2,41],10:[2,41],11:[2,41],157:[2,41],158:[2,41]},{7:[2,42],8:[2,42],10:[2,42],11:[2,42],157:[2,42],158:[2,42]},{7:[2,43],8:[2,43],10:[2,43],11:[2,43],157:[2,43],158:[2,43]},{7:[2,44],8:[2,44],10:[2,44],11:[2,44],157:[2,44],158:[2,44]},{7:[2,45],8:[2,45],10:[2,45],11:[2,45],157:[2,45],158:[2,45]},{7:[2,46],8:[2,46],10:[2,46],11:[2,46],157:[2,46],158:[2,46]},{7:[2,47],8:[2,47],10:[2,47],11:[2,47],157:[2,47],158:[2,47]},{7:[2,48],8:[2,48],10:[2,48],11:[2,48],157:[2,48],158:[2,48]},{7:[2,49],8:[2,49],10:[2,49],11:[2,49],157:[2,49],158:[2,49]},{7:[2,50],8:[2,50],10:[2,50],11:[2,50],157:[2,50],158:[2,50]},{157:[2,51],158:[2,51]},{157:[2,52],158:[2,52]},{157:[2,53],158:[2,53]},{157:[2,54],158:[2,54]},{157:[2,55],158:[2,55]},{157:[2,56],158:[2,56]},{157:[2,57],158:[2,57]},{157:[2,58],158:[2,58]},{157:[2,59],158:[2,59]},{157:[2,60],158:[2,60]},{157:[2,61],158:[2,61]},{157:[2,62],158:[2,62]},{157:[2,63],158:[2,63]},{157:[2,64],158:[2,64]},{157:[2,65],158:[2,65]},{157:[2,66],158:[2,66]},{157:[2,67],158:[2,67]},{157:[2,68],158:[2,68]},{157:[2,69],158:[2,69]},{157:[2,70],158:[2,70]},{157:[2,71],158:[2,71]},{157:[2,72],158:[2,72]},{157:[2,73],158:[2,73]},{157:[2,74],158:[2,74]},{157:[2,75],158:[2,75]},{157:[2,76],158:[2,76]},{157:[2,77],158:[2,77]},{157:[2,78],158:[2,78]},{157:[2,79],158:[2,79]},{157:[2,80],158:[2,80]},{157:[2,81],158:[2,81]},{157:[2,82],158:[2,82]},{157:[2,83],158:[2,83]},{157:[2,84],158:[2,84]},{157:[2,85],158:[2,85]},{157:[2,86],158:[2,86]},{157:[2,87],158:[2,87]},{157:[2,88],158:[2,88]},{157:[2,89],158:[2,89]},{157:[2,90],158:[2,90]},{157:[2,91],158:[2,91]},{7:[2,12],8:[2,12],10:[2,12],11:[2,12],157:[2,12],158:[2,12]},{7:[2,13],8:[2,13],10:[2,13],11:[2,13],157:[2,13],158:[2,13]},{7:[2,14],8:[2,14],10:[2,14],11:[2,14],157:[2,14],158:[2,14]},{7:[2,15],8:[2,15],10:[2,15],11:[2,15],157:[2,15],158:[2,15]},{157:[2,92],158:[2,92]},{157:[2,93],158:[2,93]},{157:[2,94],158:[2,94]},{157:[2,95],158:[2,95]},{157:[2,96],158:[2,96]},{157:[2,97],158:[2,97]},{1:[2,1]},{4:168,18:14,19:[1,102],20:[1,103],21:15,22:[1,104],23:[1,105],24:6,25:[1,26],26:[1,27],27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:9,61:[1,61],62:[1,62],63:[1,63],64:[1,64],65:[1,65],66:[1,66],67:[1,67],68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:10,74:[1,73],75:[1,74],76:[1,75],77:[1,76],78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:[1,82],84:[1,83],85:[1,84],86:[1,85],87:11,88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:12,94:[1,91],95:[1,92],96:[1,93],97:[1,94],98:[1,95],99:[1,96],100:[1,97],101:[1,98],102:[1,99],103:13,104:[1,100],105:[1,101],106:16,107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],115:[1,24],129:[1,23],132:[1,25],137:[1,8],138:[1,7],144:[1,17],153:[1,3],154:[1,4],155:[1,5],159:[1,18],160:[1,19],161:[1,20],162:[1,21],163:[1,22]},{4:169,18:14,19:[1,102],20:[1,103],21:15,22:[1,104],23:[1,105],24:6,25:[1,26],26:[1,27],27:[1,28],28:[1,29],29:[1,30],30:[1,31],31:[1,32],32:[1,33],33:[1,34],34:[1,35],35:[1,36],36:[1,37],37:[1,38],38:[1,39],39:[1,40],40:[1,41],41:[1,42],42:[1,43],43:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],49:[1,50],50:[1,51],51:[1,52],52:[1,53],53:[1,54],54:[1,55],55:[1,56],56:[1,57],57:[1,58],58:[1,59],59:[1,60],60:9,61:[1,61],62:[1,62],63:[1,63],64:[1,64],65:[1,65],66:[1,66],67:[1,67],68:[1,68],69:[1,69],70:[1,70],71:[1,71],72:[1,72],73:10,74:[1,73],75:[1,74],76:[1,75],77:[1,76],78:[1,77],79:[1,78],80:[1,79],81:[1,80],82:[1,81],83:[1,82],84:[1,83],85:[1,84],86:[1,85],87:11,88:[1,86],89:[1,87],90:[1,88],91:[1,89],92:[1,90],93:12,94:[1,91],95:[1,92],96:[1,93],97:[1,94],98:[1,95],99:[1,96],100:[1,97],101:[1,98],102:[1,99],103:13,104:[1,100],105:[1,101],106:16,107:[1,106],108:[1,107],109:[1,108],110:[1,109],111:[1,110],112:[1,111],115:[1,24],129:[1,23],132:[1,25],137:[1,8],138:[1,7],144:[1,17],153:[1,3],154:[1,4],155:[1,5],159:[1,18],160:[1,19],161:[1,20],162:[1,21],163:[1,22]},{5:[2,184],151:[2,184],152:[2,184],156:[2,184]},{5:[2,185],151:[2,185],152:[2,185],156:[2,185]},{151:[1,113],152:[1,114],156:[1,170]},{16:[1,171]},{16:[1,172],17:[1,173]},{16:[1,174],17:[1,175]},{16:[2,6]},{16:[2,7]},{16:[2,2]},{16:[2,3]},{16:[2,4]},{16:[2,5]},{16:[1,178],17:[1,182],136:[1,179],145:[1,180],146:[1,181],147:[1,183],149:176,150:177},{16:[1,178],17:[1,182],136:[1,179],145:[1,180],146:[1,181],147:[1,183],149:184,150:185},{16:[1,186]},{16:[1,187],17:[1,188]},{16:[1,189],17:[1,190]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:191,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:220,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:221,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:222,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:223,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:224,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:225,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:226,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:227,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:228,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],16:[1,230],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:229,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],16:[1,232],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:231,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{16:[1,233]},{16:[1,234],17:[1,235]},{16:[1,236],17:[1,237]},{16:[1,238]},{13:239,14:[1,240],15:[1,241],16:[1,242],17:[1,243]},{13:244,14:[1,240],15:[1,241],16:[1,242],17:[1,243]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:245,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:246,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:247,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:248,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:249,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:250,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:251,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:252,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:253,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:254,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:255,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:256,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:257,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:258,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:259,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:260,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:261,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{14:[1,218],15:[1,219],17:[1,217],26:[1,194],27:[1,204],61:[1,203],107:[1,202],113:262,114:[1,192],115:[1,193],118:[1,197],121:[1,195],129:[1,196],130:[1,212],131:[1,198],132:[1,199],133:[1,200],135:[1,214],136:[1,201],137:[1,205],138:[1,206],139:[1,207],140:[1,208],141:[1,209],144:[1,210],145:[1,211],146:[1,213],147:[1,215],148:[1,216]},{5:[2,182],151:[2,182],152:[2,182],156:[2,182]},{5:[2,183],151:[1,113],152:[2,183],156:[2,183]},{5:[2,186],151:[2,186],152:[2,186],156:[2,186]},{5:[2,187],151:[2,187],152:[2,187],156:[2,187]},{5:[2,188],151:[2,188],152:[2,188],156:[2,188]},{5:[2,190],151:[2,190],152:[2,190],156:[2,190]},{5:[2,189],151:[2,189],152:[2,189],156:[2,189]},{5:[2,191],151:[2,191],152:[2,191],156:[2,191]},{5:[2,192],151:[2,192],152:[2,192],156:[2,192]},{5:[2,193],151:[2,193],152:[2,193],156:[2,193]},{5:[2,176],151:[2,176],152:[2,176],156:[2,176]},{5:[2,177],151:[2,177],152:[2,177],156:[2,177]},{5:[2,178],151:[2,178],152:[2,178],156:[2,178]},{5:[2,179],151:[2,179],152:[2,179],156:[2,179]},{5:[2,180],151:[2,180],152:[2,180],156:[2,180]},{5:[2,181],151:[2,181],152:[2,181],156:[2,181]},{5:[2,194],151:[2,194],152:[2,194],156:[2,194]},{5:[2,195],151:[2,195],152:[2,195],156:[2,195]},{5:[2,196],151:[2,196],152:[2,196],156:[2,196]},{5:[2,217],151:[2,217],152:[2,217],156:[2,217]},{5:[2,218],151:[2,218],152:[2,218],156:[2,218]},{5:[2,219],151:[2,219],152:[2,219],156:[2,219]},{5:[2,220],151:[2,220],152:[2,220],156:[2,220]},{5:[2,197],151:[2,197],152:[2,197],156:[2,197]},{5:[2,98],151:[2,98],152:[2,98],156:[2,98]},{5:[2,99],116:[1,263],117:[1,264],118:[1,265],119:[1,266],120:[1,267],151:[2,99],152:[2,99],156:[2,99]},{5:[2,105],151:[2,105],152:[2,105],156:[2,105]},{122:[1,268],123:[1,269],124:[1,270],127:[1,271],128:[1,272]},{5:[2,114],116:[1,273],117:[1,274],118:[1,275],119:[1,276],120:[1,277],151:[2,114],152:[2,114],156:[2,114]},{117:[1,278],119:[1,279],128:[1,280],130:[1,281]},{5:[2,128],117:[1,282],119:[1,283],151:[2,128],152:[2,128],156:[2,128]},{5:[2,133],123:[1,284],151:[2,133],152:[2,133],156:[2,133]},{130:[1,286],134:[1,285],135:[1,287]},{5:[2,141],151:[2,141],152:[2,141],156:[2,141]},{5:[2,142],116:[1,288],117:[1,289],118:[1,290],119:[1,291],120:[1,292],151:[2,142],152:[2,142],156:[2,142]},{5:[2,151],151:[2,151],152:[2,151],156:[2,151]},{5:[2,152],151:[2,152],152:[2,152],156:[2,152]},{5:[2,153],117:[1,293],119:[1,294],151:[2,153],152:[2,153],156:[2,153]},{5:[2,156],151:[2,156],152:[2,156],156:[2,156]},{5:[2,157],151:[2,157],152:[2,157],156:[2,157]},{5:[2,158],151:[2,158],152:[2,158],156:[2,158]},{142:[1,295],143:[1,296]},{5:[2,163],123:[1,297],151:[2,163],152:[2,163],156:[2,163]},{5:[2,165],151:[2,165],152:[2,165],156:[2,165]},{5:[2,166],123:[1,298],151:[2,166],152:[2,166],156:[2,166]},{5:[2,168],151:[2,168],152:[2,168],156:[2,168]},{5:[2,169],123:[1,299],151:[2,169],152:[2,169],156:[2,169]},{5:[2,171],151:[2,171],152:[2,171],156:[2,171]},{5:[2,172],151:[2,172],152:[2,172],156:[2,172]},{5:[2,173],151:[2,173],152:[2,173],156:[2,173]},{5:[2,174],151:[2,174],152:[2,174],156:[2,174]},{5:[2,175],151:[2,175],152:[2,175],156:[2,175]},{5:[2,198],151:[2,198],152:[2,198],156:[2,198]},{5:[2,199],151:[2,199],152:[2,199],156:[2,199]},{5:[2,200],151:[2,200],152:[2,200],156:[2,200]},{5:[2,201],151:[2,201],152:[2,201],156:[2,201]},{5:[2,202],151:[2,202],152:[2,202],156:[2,202]},{5:[2,203],151:[2,203],152:[2,203],156:[2,203]},{5:[2,204],151:[2,204],152:[2,204],156:[2,204]},{5:[2,205],151:[2,205],152:[2,205],156:[2,205]},{5:[2,206],151:[2,206],152:[2,206],156:[2,206]},{5:[2,207],151:[2,207],152:[2,207],156:[2,207]},{5:[2,209],151:[2,209],152:[2,209],156:[2,209]},{5:[2,208],151:[2,208],152:[2,208],156:[2,208]},{5:[2,210],151:[2,210],152:[2,210],156:[2,210]},{5:[2,211],151:[2,211],152:[2,211],156:[2,211]},{5:[2,212],151:[2,212],152:[2,212],156:[2,212]},{5:[2,214],151:[2,214],152:[2,214],156:[2,214]},{5:[2,213],151:[2,213],152:[2,213],156:[2,213]},{5:[2,215],151:[2,215],152:[2,215],156:[2,215]},{5:[2,216],151:[2,216],152:[2,216],156:[2,216]},{5:[2,221],151:[2,221],152:[2,221],156:[2,221]},{5:[2,8],151:[2,8],152:[2,8],156:[2,8]},{5:[2,9],151:[2,9],152:[2,9],156:[2,9]},{5:[2,10],151:[2,10],152:[2,10],156:[2,10]},{5:[2,11],151:[2,11],152:[2,11],156:[2,11]},{5:[2,222],151:[2,222],152:[2,222],156:[2,222]},{5:[2,223],151:[2,223],152:[2,223],156:[2,223]},{5:[2,224],151:[2,224],152:[2,224],156:[2,224]},{5:[2,225],151:[2,225],152:[2,225],156:[2,225]},{5:[2,226],151:[2,226],152:[2,226],156:[2,226]},{5:[2,227],151:[2,227],152:[2,227],156:[2,227]},{5:[2,230],151:[2,230],152:[2,230],156:[2,230]},{5:[2,228],151:[2,228],152:[2,228],156:[2,228]},{5:[2,231],151:[2,231],152:[2,231],156:[2,231]},{5:[2,229],151:[2,229],152:[2,229],156:[2,229]},{5:[2,232],151:[2,232],152:[2,232],156:[2,232]},{5:[2,233],151:[2,233],152:[2,233],156:[2,233]},{5:[2,234],151:[2,234],152:[2,234],156:[2,234]},{5:[2,235],151:[2,235],152:[2,235],156:[2,235]},{5:[2,236],151:[2,236],152:[2,236],156:[2,236]},{5:[2,237],151:[2,237],152:[2,237],156:[2,237]},{5:[2,238],151:[2,238],152:[2,238],156:[2,238]},{5:[2,239],151:[2,239],152:[2,239],156:[2,239]},{5:[2,240],151:[2,240],152:[2,240],156:[2,240]},{5:[2,100],151:[2,100],152:[2,100],156:[2,100]},{5:[2,101],151:[2,101],152:[2,101],156:[2,101]},{5:[2,102],151:[2,102],152:[2,102],156:[2,102]},{5:[2,103],151:[2,103],152:[2,103],156:[2,103]},{5:[2,104],151:[2,104],152:[2,104],156:[2,104]},{5:[2,106],123:[1,300],151:[2,106],152:[2,106],156:[2,106]},{5:[2,108],151:[2,108],152:[2,108],156:[2,108]},{125:[1,301],126:[1,302]},{5:[2,111],151:[2,111],152:[2,111],156:[2,111]},{125:[1,303],126:[1,304]},{5:[2,115],151:[2,115],152:[2,115],156:[2,115]},{5:[2,116],151:[2,116],152:[2,116],156:[2,116]},{5:[2,117],151:[2,117],152:[2,117],156:[2,117]},{5:[2,118],151:[2,118],152:[2,118],156:[2,118]},{5:[2,119],151:[2,119],152:[2,119],156:[2,119]},{5:[2,120],123:[1,305],151:[2,120],152:[2,120],156:[2,120]},{5:[2,122],123:[1,306],151:[2,122],152:[2,122],156:[2,122]},{5:[2,124],123:[1,307],151:[2,124],152:[2,124],156:[2,124]},{5:[2,126],123:[1,308],151:[2,126],152:[2,126],156:[2,126]},{5:[2,129],123:[1,309],151:[2,129],152:[2,129],156:[2,129]},{5:[2,131],123:[1,310],151:[2,131],152:[2,131],156:[2,131]},{5:[2,134],151:[2,134],152:[2,134],156:[2,134]},{5:[2,135],123:[1,311],151:[2,135],152:[2,135],156:[2,135]},{5:[2,137],123:[1,312],151:[2,137],152:[2,137],156:[2,137]},{5:[2,139],123:[1,313],151:[2,139],152:[2,139],156:[2,139]},{5:[2,143],123:[1,314],151:[2,143],152:[2,143],156:[2,143]},{5:[2,145],151:[2,145],152:[2,145],156:[2,145]},{5:[2,146],123:[1,315],151:[2,146],152:[2,146],156:[2,146]},{5:[2,148],151:[2,148],152:[2,148],156:[2,148]},{5:[2,149],123:[1,316],151:[2,149],152:[2,149],156:[2,149]},{5:[2,154],151:[2,154],152:[2,154],156:[2,154]},{5:[2,155],151:[2,155],152:[2,155],156:[2,155]},{5:[2,159],123:[1,317],151:[2,159],152:[2,159],156:[2,159]},{5:[2,161],123:[1,318],151:[2,161],152:[2,161],156:[2,161]},{5:[2,164],151:[2,164],152:[2,164],156:[2,164]},{5:[2,167],151:[2,167],152:[2,167],156:[2,167]},{5:[2,170],151:[2,170],152:[2,170],156:[2,170]},{5:[2,107],151:[2,107],152:[2,107],156:[2,107]},{5:[2,109],151:[2,109],152:[2,109],156:[2,109]},{5:[2,110],151:[2,110],152:[2,110],156:[2,110]},{5:[2,112],151:[2,112],152:[2,112],156:[2,112]},{5:[2,113],151:[2,113],152:[2,113],156:[2,113]},{5:[2,121],151:[2,121],152:[2,121],156:[2,121]},{5:[2,123],151:[2,123],152:[2,123],156:[2,123]},{5:[2,125],151:[2,125],152:[2,125],156:[2,125]},{5:[2,127],151:[2,127],152:[2,127],156:[2,127]},{5:[2,130],151:[2,130],152:[2,130],156:[2,130]},{5:[2,132],151:[2,132],152:[2,132],156:[2,132]},{5:[2,136],151:[2,136],152:[2,136],156:[2,136]},{5:[2,138],151:[2,138],152:[2,138],156:[2,138]},{5:[2,140],151:[2,140],152:[2,140],156:[2,140]},{5:[2,144],151:[2,144],152:[2,144],156:[2,144]},{5:[2,147],151:[2,147],152:[2,147],156:[2,147]},{5:[2,150],151:[2,150],152:[2,150],156:[2,150]},{5:[2,160],151:[2,160],152:[2,160],156:[2,160]},{5:[2,162],151:[2,162],152:[2,162],156:[2,162]}],
defaultActions: {112:[2,1],121:[2,6],122:[2,7],123:[2,2],124:[2,3],125:[2,4],126:[2,5]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


var    util           = require('util');

function parseIpPort(yy, ipPortStr, which) {
  ipPortStr = ipPortStr.trim();

// We really have a list of them
  if (ipPortStr[0] === "[" && ipPortStr[ipPortStr.length -1] === "]") {
      var obj =  {bool: {should: []}};
      CSVtoArray(ipPortStr).forEach(function(str) {
          obj.bool.should.push(parseIpPort(yy, str, which));
      });
      return obj;
  }

  // Support '10.10.10/16:4321'

  var ip1 = -1, ip2 = -1;
  var colons = ipPortStr.split(':');
  var slash = colons[0].split('/');
  var dots = slash[0].split('.');
  var port = -1;
  if (colons[1]) {
    port = parseInt(colons[1], 10);
  }

  if (dots.length === 4) {
    ip1 = ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | parseInt(dots[3], 10);
  } else if (dots.length === 3) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (parseInt(dots[2], 10) << 8) | 255;
  } else if (dots.length === 2) {
    ip1 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16);
    ip2 = (parseInt(dots[0], 10) << 24) | (parseInt(dots[1], 10) << 16) | (255 << 8) | 255;
  } else if (dots.length === 1 && dots[0].length > 0) {
    ip1 = (parseInt(dots[0], 10) << 24);
    ip2 = (parseInt(dots[0], 10) << 24) | (255 << 16) | (255 << 8) | 255;
  }

  // Can't shift by 32 bits in javascript, who knew!
  if (slash[1] && slash[1] !== '32') {
     var s = parseInt(slash[1], 10);
     ip1 = ip1 & (0xffffffff << (32 - s));
     ip2 = ip2 | (0xffffffff >>> s);
  }

  var t1 = {bool: {must: []}};
  var t2 = {bool: {must: []}};
  var xff;
  var dns;
  var email;

  if (ip1 !== -1) {
    if (ip1 === ip2) {
        t1.bool.must.push({term: {a1: ip1>>>0}});
        t2.bool.must.push({term: {a2: ip1>>>0}});
        dns   = {term: {dnsip: ip1>>>0}};
        email = {term: {eip: ip1>>>0}};
        xff   = {term: {xff: ip1>>>0}};
    } else {
        t1.bool.must.push({range: {a1: {from: ip1>>>0, to: ip2>>>0}}});
        t2.bool.must.push({range: {a2: {from: ip1>>>0, to: ip2>>>0}}});
        dns =    {range: {dnsip: {from: ip1>>>0, to: ip2>>>0}}};
        email =  {range: {eip: {from: ip1>>>0, to: ip2>>>0}}};
        xff =    {range: {xff: {from: ip1>>>0, to: ip2>>>0}}};
    }
  }

  if (port !== -1) {
    t1.bool.must.push({term: {p1: port}});
    t2.bool.must.push({term: {p2: port}});
  }

  if (t1.bool.must.length === 1) {
      t1 = t1.bool.must[0];
      t2 = t2.bool.must[0];
  }

  switch(which) {
  case 0:
    var ors = [t1, t2];

    if (xff)
        ors.push(xff);
    if (dns)
        ors.push(dns);
    if (yy.emailSearch === true && email)
        ors.push(email);

    return {bool: {should: ors}};
  case 1:
    return t1;
  case 2:
    return t2;
  case 3:
    if (!xff)
        throw "xff doesn't support port only";
    return xff;
  case 4:
    if (!dns)
        throw "dns doesn't support port only";
    return dns;
  case 5:
    if (!email)
        throw "email doesn't support port only";
    return email;
  }
}

function stripQuotes (str) {
  if (str[0] === "\"") {
    str =  str.substring(1, str.length-1);
  }
  return str;
}

var field2RawField = {
    us: "rawus",
    ua: "rawua",
    as1: "rawas1",
    as2: "rawas2",
    asxff: "rawasff",
    asdnsip: "rawasdnsip",
    iOn: "rawiOn",
    eua: "raweua",
    esub: "rawesub",
    aseip: "rawaseip"
}

function str2Query(field, kind, str)
{
    var obj;

    if (field2RawField[field] === undefined && field.indexOf(".snow", field.length - 5) !== -1) {
        field2RawField[field] = field.substring(0, field.length - 5) + ".raw";
    }

    if (str[0] === "/" && str[str.length -1] === "/") {
        field = field2RawField[field] || field;
        obj = {regexp: {}};
        obj.regexp[field] = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
        return obj;
    }

    var strs;
    if (str[0] === "\"" && str[str.length -1] === "\"") {
        str = str.substring(1, str.length-1).replace(/\\(.)/g, "$1");
    } else if (str[0] === "[" && str[str.length -1] === "]") {
        strs = CSVtoArray(str);
        if (kind === "term") {
            obj = {terms: {}};
            obj.terms[field] = strs;
        } else if (kind === "text") {
            var obj =  {query: {bool: {should: []}}};
            strs.forEach(function(str) {
              var should = {text: {}};
              should.text[field] = {query: str, type: "phrase", operator: "and"}
              obj.query.bool.should.push(should);
            });
        }
        return obj;
    }

    if (str.indexOf("*") !== -1) {
        field = field2RawField[field] || field;
        obj = {query: {wildcard: {}}};
        obj.query.wildcard[field] = str;
    } else if (kind === "text") {
        obj = {query: {text: {}}};
        obj.query.text[field] = {query: str, type: "phrase", operator: "and"}
    } else if (kind === "term") {
        obj = {term: {}};
        obj.term[field] = str;
    }
    return obj;
}

function str2Header(yy, name) {
    var field = yy.fieldsMap[name];
    if (field === undefined) throw "Unknown field " + name;

    return field.db;
}

// http://stackoverflow.com/a/8497474
// Return array of string values, or NULL if CSV string not well formed.
function CSVtoArray(text) {
    text = text.substring(1, text.length-1);
    var re_valid = /^\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*(?:,\s*(?:'[^'\\]*(?:\\[\S\s][^'\\]*)*'|"[^"\\]*(?:\\[\S\s][^"\\]*)*"|[^,'"\s\\]*(?:\s+[^,'"\s\\]+)*)\s*)*$/;
    var re_value = /(?!\s*$)\s*(?:'([^'\\]*(?:\\[\S\s][^'\\]*)*)'|"([^"\\]*(?:\\[\S\s][^"\\]*)*)"|([^,'"\s\\]*(?:\s+[^,'"\s\\]+)*))\s*(?:,|$)/g;
    // Return NULL if input string is not well formed CSV string.
    if (!re_valid.test(text)) return null;
    var a = [];                     // Initialize array to receive values.
    text.replace(re_value, // "Walk" the string using replace with callback.
        function(m0, m1, m2, m3) {
            // Remove backslash from \' in single quoted values.
            if      (m1 !== undefined) a.push(m1.replace(/\\'/g, "'"));
            // Remove backslash from \" in double quoted values.
            else if (m2 !== undefined) a.push(m2.replace(/\\"/g, '"'));
            else if (m3 !== undefined) a.push(m3);
            return ''; // Return empty string.
        });
    // Handle special case of empty last value.
    if (/,\s*$/.test(text)) a.push('');
    return a;
};

var protocols = {
    icmp: 1,
    tcp:  6,
    udp:  17
};

function protocolLookup(text) {
    if (typeof text !== "string") {
        for (var i = 0; i < text.length; i++) {
            text[i] = protocols[text[i]] || +text[i];
        }
        return text;
    } else {
        return protocols[text] || +text;
    }
}

function termOrTerms(field, str) {
  var obj = {};
  if (str[0] === "[" && str[str.length -1] === "]") {
    obj = {terms: {}};
    obj.terms[field] = CSVtoArray(str);
  } else {
    obj = {term: {}};
    obj.term[field] = str;
  }
  return obj;
}
/* generated by jison-lex 0.1.0 */
var lexer = (function(){
var lexer = {
EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 16
break;
case 2:return 17
break;
case 3:return 14
break;
case 4:return 15
break;
case 5:if (!yy.emailSearch) throw "email searches disabled for user"; return 46
break;
case 6:if (!yy.emailSearch) throw "email searches disabled for user"; return 80
break;
case 7:if (!yy.emailSearch) throw "email searches disabled for user"; return 51
break;
case 8:if (!yy.emailSearch) throw "email searches disabled for user"; return 78
break;
case 9:if (!yy.emailSearch) throw "email searches disabled for user"; return 49
break;
case 10:if (!yy.emailSearch) throw "email searches disabled for user"; return 76
break;
case 11:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 12:if (!yy.emailSearch) throw "email searches disabled for user"; return 100
break;
case 13:return "http.hasheader.dst.cnt"
break;
case 14:return "http.hasheader.dst"
break;
case 15:return "http.hasheader"
break;
case 16:return "http.hasheader.src.cnt"
break;
case 17:return "http.hasheader.src"
break;
case 18:return "http.user-agent.cnt"
break;
case 19:return "http.user-agent"
break;
case 20:return "http.user-agent.cnt"
break;
case 21:return "http.user-agent"
break;
case 22:return 115
break;
case 23:return 96
break;
case 24:return 95
break;
case 25:return 94
break;
case 26:return 97
break;
case 27:if (!yy.emailSearch) throw "email searches disabled for user"; return 98
break;
case 28:return 26
break;
case 29:return "cert.alt.cnt"
break;
case 30:return "cert.alt"
break;
case 31:return "cert.cnt"
break;
case 32:return "cert.issuer.cn"
break;
case 33:return "cert.issuer.on"
break;
case 34:return "cert.serial"
break;
case 35:return "cert.subject.cn"
break;
case 36:return "cert.subject.on"
break;
case 37:return 129
break;
case 38:return 92
break;
case 39:return 89
break;
case 40:return 88
break;
case 41:return 90
break;
case 42:if (!yy.emailSearch) throw "email searches disabled for user"; return 91
break;
case 43:return 25
break;
case 44:if (!yy.emailSearch) throw "email searches disabled for user"; return 46
break;
case 45:if (!yy.emailSearch) throw "email searches disabled for user"; return 80
break;
case 46:if (!yy.emailSearch) throw "email searches disabled for user"; return 47
break;
case 47:if (!yy.emailSearch) throw "email searches disabled for user"; return 66
break;
case 48:if (!yy.emailSearch) throw "email searches disabled for user"; return 48
break;
case 49:if (!yy.emailSearch) throw "email searches disabled for user"; return 79
break;
case 50:if (!yy.emailSearch) throw "email searches disabled for user"; return 49
break;
case 51:if (!yy.emailSearch) throw "email searches disabled for user"; return 76
break;
case 52:if (!yy.emailSearch) throw "email searches disabled for user"; return 50
break;
case 53:if (!yy.emailSearch) throw "email searches disabled for user"; return 77
break;
case 54:if (!yy.emailSearch) throw "email searches disabled for user"; return 51
break;
case 55:if (!yy.emailSearch) throw "email searches disabled for user"; return 78
break;
case 56:if (!yy.emailSearch) throw "email searches disabled for user"; return 52
break;
case 57:if (!yy.emailSearch) throw "email searches disabled for user"; return 67
break;
case 58:if (!yy.emailSearch) throw "email searches disabled for user"; return 53
break;
case 59:if (!yy.emailSearch) throw "email searches disabled for user"; return 99
break;
case 60:if (!yy.emailSearch) throw "email searches disabled for user"; return 54
break;
case 61:if (!yy.emailSearch) throw "email searches disabled for user"; return 100
break;
case 62:if (!yy.emailSearch) throw "email searches disabled for user"; return 22
break;
case 63:if (!yy.emailSearch) throw "email searches disabled for user"; return 19
break;
case 64:return "file"
break;
case 65:return "http.hasheader.dst.cnt"
break;
case 66:return "http.hasheader.dst"
break;
case 67:return "http.hasheader"
break;
case 68:return "http.hasheader.src.cnt"
break;
case 69:return "http.hasheader.src"
break;
case 70:return "host.dns.cnt"
break;
case 71:return "host.dns"
break;
case 72:return "host.email.cnt"
break;
case 73:return "host.email"
break;
case 74:return "host.http.cnt"
break;
case 75:return "host.http"
break;
case 76:return "host"
break;
case 77:return "http.md5.cnt"
break;
case 78:return "http.md5"
break;
case 79:return "http.uri.cnt"
break;
case 80:return "http.uri"
break;
case 81:return "http.version"
break;
case 82:return "http.version.src"
break;
case 83:return "http.version.src.cnt"
break;
case 84:return "http.version.dst"
break;
case 85:return "http.version.dst.cnt"
break;
case 86:return "http.user-agent.cnt"
break;
case 87:return "http.user-agent"
break;
case 88:return "host.http.cnt"
break;
case 89:return "host.http"
break;
case 90:return "HTTP_HEADER_CNT"
break;
case 91:return "HTTP_HEADER"
break;
case 92:return "icmp"
break;
case 93:return "icmp"
break;
case 94:return "id"
break;
case 95:return "ip.dns.cnt"
break;
case 96:return "ip.dns"
break;
case 97:return "ip.dst"
break;
case 98:return "ip"
break;
case 99:return "ip.src"
break;
case 100:return "ip.xff.cnt"
break;
case 101:return "ip.xff"
break;
case 102:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email.cnt"
break;
case 103:if (!yy.emailSearch) throw "email searches disabled for user"; return "ip.email"
break;
case 104:return "irc.nick"
break;
case 105:return "irc.nick.cnt"
break;
case 106:return "irc.channel"
break;
case 107:return "irc.channel.cnt"
break;
case 108:return 61
break;
case 109:return 27
break;
case 110:return 29
break;
case 111:return 137
break;
case 112:return 28
break;
case 113:return 138
break;
case 114:return "rootId"
break;
case 115:return "ssh.key.cnt"
break;
case 116:return "ssh.key"
break;
case 117:return "ssh.ver.cnt"
break;
case 118:return "ssh.ver"
break;
case 119:return 45
break;
case 120:return 144
break;
case 121:return "tcp"
break;
case 122:return "tcp"
break;
case 123:return "udp"
break;
case 124:return "udp"
break;
case 125:return "http.uri.cnt"
break;
case 126:return "http.uri"
break;
case 127:return "user.cnt"
break;
case 128:return "user"
break;
case 129:return 114
break;
case 130:return 139
break;
case 131:return 140
break;
case 132:return 147
break;
case 133:return 148
break;
case 134:return 8
break;
case 135:return 7
break;
case 136:return 11
break;
case 137:return 10
break;
case 138:return 158
break;
case 139:return 157
break;
case 140:return 157
break;
case 141:return 152
break;
case 142:return 152
break;
case 143:return 151
break;
case 144:return 151
break;
case 145:return 155
break;
case 146:return 156
break;
case 147:return 153
break;
case 148:return 5
break;
case 149:return 'INVALID'
break;
case 150:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:\s+)/,/^(?:[0-9]+\b)/,/^(?:\[[0-9,'"]+\])/,/^(?:([0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\/[0-9]{1,2})?(:[0-9]{1,5})?\b)/,/^(?:\[(?:([0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\.[0-9]{1,3})?(\/[0-9]{1,2})?(:[0-9]{1,5})?[ ,]{0,1})+\])/,/^(?:email\.ct\.cnt)/,/^(?:email\.ct)/,/^(?:email\.mv\.cnt)/,/^(?:email\.mv)/,/^(?:email\.id\.cnt)/,/^(?:email\.id)/,/^(?:email\.ua\.cnt)/,/^(?:email\.ua)/,/^(?:header\.dst\.cnt)/,/^(?:header\.dst)/,/^(?:header)/,/^(?:header\.src\.cnt)/,/^(?:header\.src)/,/^(?:http\.ua\.cnt)/,/^(?:http\.ua)/,/^(?:ua\.cnt)/,/^(?:ua)/,/^(?:asn)/,/^(?:asn\.dns)/,/^(?:asn\.dst)/,/^(?:asn\.src)/,/^(?:asn\.xff)/,/^(?:asn\.email)/,/^(?:bytes)/,/^(?:cert\.alt\.cnt)/,/^(?:cert\.alt)/,/^(?:cert\.cnt)/,/^(?:cert\.issuer\.cn)/,/^(?:cert\.issuer\.on)/,/^(?:cert\.serial)/,/^(?:cert\.subject\.cn)/,/^(?:cert\.subject\.on)/,/^(?:country)/,/^(?:country\.dns)/,/^(?:country\.dst)/,/^(?:country\.src)/,/^(?:country\.xff)/,/^(?:country\.email)/,/^(?:databytes)/,/^(?:email\.content-type\.cnt)/,/^(?:email\.content-type)/,/^(?:email\.dst\.cnt)/,/^(?:email\.dst)/,/^(?:email\.fn\.cnt)/,/^(?:email\.fn)/,/^(?:email\.message-id\.cnt)/,/^(?:email\.message-id)/,/^(?:email\.md5\.cnt)/,/^(?:email\.md5)/,/^(?:email\.mime-version\.cnt)/,/^(?:email\.mime-version)/,/^(?:email\.src\.cnt)/,/^(?:email\.src)/,/^(?:email\.subject\.cnt)/,/^(?:email\.subject)/,/^(?:email\.x-mailer\.cnt)/,/^(?:email\.x-mailer)/,/^(?:email\.[^\s!=><.]*\.cnt)/,/^(?:email\.[^\s!=><.]*)/,/^(?:file)/,/^(?:http\.hasheader\.dst\.cnt)/,/^(?:http\.hasheader\.dst)/,/^(?:http\.hasheader)/,/^(?:http\.hasheader\.src\.cnt)/,/^(?:http\.hasheader\.src)/,/^(?:host\.dns\.cnt)/,/^(?:host\.dns)/,/^(?:host\.email\.cnt)/,/^(?:host\.email)/,/^(?:host\.http\.cnt)/,/^(?:host\.http)/,/^(?:host)/,/^(?:http\.md5\.cnt)/,/^(?:http\.md5)/,/^(?:http\.uri\.cnt)/,/^(?:http\.uri)/,/^(?:http\.version)/,/^(?:http\.version\.src)/,/^(?:http\.version\.src\.cnt)/,/^(?:http\.version\.dst)/,/^(?:http\.version\.dst\.cnt)/,/^(?:http\.user-agent\.cnt)/,/^(?:http\.user-agent)/,/^(?:http\.host\.cnt)/,/^(?:http\.host)/,/^(?:http\.[^\s!=><.]*\.cnt)/,/^(?:http\.[^\s!=><.]*)/,/^(?:icmp)/,/^(?:"icmp")/,/^(?:id)/,/^(?:ip\.dns\.cnt)/,/^(?:ip\.dns)/,/^(?:ip\.dst)/,/^(?:ip)/,/^(?:ip\.src)/,/^(?:ip\.xff\.cnt)/,/^(?:ip\.xff)/,/^(?:ip\.email\.cnt)/,/^(?:ip\.email)/,/^(?:irc\.nick)/,/^(?:irc\.nick\.cnt)/,/^(?:irc\.channel)/,/^(?:irc\.channel\.cnt)/,/^(?:node)/,/^(?:packets)/,/^(?:port\.dst)/,/^(?:port)/,/^(?:port\.src)/,/^(?:protocol)/,/^(?:rootId)/,/^(?:ssh\.key\.cnt)/,/^(?:ssh\.key)/,/^(?:ssh\.ver\.cnt)/,/^(?:ssh\.ver)/,/^(?:tags\.cnt)/,/^(?:tags)/,/^(?:tcp)/,/^(?:"tcp")/,/^(?:udp)/,/^(?:"udp")/,/^(?:uri\.cnt)/,/^(?:uri)/,/^(?:user\.cnt)/,/^(?:user)/,/^(?:[/\w*._:-]+)/,/^(?:"[^"\\]*(?:\\.[^"\\]*)*")/,/^(?:\/[^/\\]*(?:\\.[^/\\]*)*\/)/,/^(?:\[[0-9a-z,"]+\])/,/^(?:\[[^\]]+\])/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\()/,/^(?:\))/,/^(?:!)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = molochparser;
exports.Parser = molochparser.Parser;
exports.parse = function () { return molochparser.parse.apply(molochparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}